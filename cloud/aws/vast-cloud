#!/usr/bin/env bash

DOCKER_SOCKET=/var/run/docker.sock

# Set the VAST_CLOUD_REBUILD env variable to any value to force docker rebuild.
# The CLI runs Docker commands from Docker, so it needs to have access to the Docker socket.
# The calling user id and group id are propagated to the image at build time. 
# Rebuild is required when changing the calling user.

export USER_ID=$(id -u)
export GROUP_ID=$(id -g)
export DOCKER_ID=$(stat -c '%g' ${DOCKER_SOCKET})

build () {
  echo "(UID=$USER_ID,GID=$GROUP_ID,DOCKER_ID=$DOCKER_ID)"
  docker build \
    -t tenzir/vast-cloud-cli \
    -f docker/cli.Dockerfile \
    --build-arg UID=$USER_ID \
    --build-arg GID=$GROUP_ID \
    --build-arg DOCKER_ID \
    .
}

docker image inspect tenzir/vast-cloud-cli > /dev/null \
    && [[ -z $VAST_CLOUD_REBUILD ]] \
    || build

docker run -it \
    --mount type=bind,source=${DOCKER_SOCKET},target=/var/run/docker.sock \
    --mount type=bind,source=$PWD/../..,target=/vast \
    --mount type=bind,source=$HOME/.aws/credentials,target=/.aws/credentials,readonly \
    -e AWS_PROFILE \
    -e AWS_SHARED_CREDENTIALS_FILE=/.aws/credentials \
    -e AWS_ACCESS_KEY_ID \
    -e AWS_SECRET_ACCESS_KEY \
    --env-file <(env | grep VAST_) \
    tenzir/vast-cloud-cli "$@"
