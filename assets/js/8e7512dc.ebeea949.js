"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[78284],{15680:(e,t,r)=>{r.d(t,{xA:()=>d,yg:()=>m});var a=r(96540);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(r),y=n,m=c["".concat(s,".").concat(y)]||c[y]||g[y]||l;return r?a.createElement(m,i(i({ref:t},d),{},{components:r})):a.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=y;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},54305:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>v,contentTitle:()=>u,default:()=>w,frontMatter:()=>m,metadata:()=>f,toc:()=>h});var a=r(15680),n=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&d(e,r,t[r]);if(o)for(var r of o(t))p.call(t,r)&&d(e,r,t[r]);return e},g=(e,t)=>l(e,i(t)),y=(e,t)=>{var r={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&p.call(e,a)&&(r[a]=e[a]);return r};const m={},u="write_xsv",f={unversionedId:"tql2/operators/write_xsv",id:"version-v4.24/tql2/operators/write_xsv",title:"write_xsv",description:"Transforms event stream to XSV byte stream.",source:"@site/versioned_docs/version-v4.24/tql2/operators/write_xsv.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/write_xsv",permalink:"/tql2/operators/write_xsv",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.24/tql2/operators/write_xsv.md",tags:[],version:"v4.24",frontMatter:{},sidebar:"docsSidebar",previous:{title:"write_tsv",permalink:"/tql2/operators/write_tsv"},next:{title:"write_yaml",permalink:"/tql2/operators/write_yaml"}},v={},h=[{value:"Description",id:"description",level:2},{value:"<code>field_sep: str</code>",id:"field_sep-str",level:3},{value:"<code>list_sep: str</code>",id:"list_sep-str",level:3},{value:"<code>null_value: str</code>",id:"null_value-str",level:3},{value:"<code>no_header=bool (optional)</code>",id:"no_headerbool-optional",level:3},{value:"Examples",id:"examples",level:2}],b={toc:h},N="wrapper";function w(e){var t=e,{components:r}=t,n=y(t,["components"]);return(0,a.yg)(N,g(c(c({},b),n),{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",c({},{id:"write_xsv"}),"write_xsv"),(0,a.yg)("p",null,"Transforms event stream to XSV byte stream."),(0,a.yg)("figure",c({},{"data-rehype-pretty-code-figure":""}),(0,a.yg)("pre",c({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,a.yg)("code",c({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,a.yg)("span",c({parentName:"code"},{"data-line":""}),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"write_xsv"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}})," field_sep"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, list_sep"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, null_value"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, [no_header"),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,a.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}}),"bool]"))))),(0,a.yg)("h2",c({},{id:"description"}),"Description"),(0,a.yg)("p",null,"The ",(0,a.yg)("a",c({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Delimiter-separated_values"}),(0,a.yg)("inlineCode",{parentName:"a"},"xsv"))," format is a generalization of ",(0,a.yg)("a",c({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Comma-separated_values"}),"comma-separated values (CSV)")," data\nin tabular form with a more flexible separator specification supporting tabs,\ncommas, and spaces. The first line in an XSV file is the header that describes\nthe field names. The remaining lines contain concrete values. One line\ncorresponds to one event, minus the header."),(0,a.yg)("p",null,"The following table lists existing XSV configurations:"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",c({parentName:"tr"},{align:null}),"Format"),(0,a.yg)("th",c({parentName:"tr"},{align:"center"}),"Field Separator"),(0,a.yg)("th",c({parentName:"tr"},{align:"center"}),"List Separator"),(0,a.yg)("th",c({parentName:"tr"},{align:"center"}),"Null Value"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",c({parentName:"tr"},{align:null}),(0,a.yg)("a",c({parentName:"td"},{href:"/tql2/operators/write_csv"}),(0,a.yg)("inlineCode",{parentName:"a"},"csv"))),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},",")),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},";")),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),"empty")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",c({parentName:"tr"},{align:null}),(0,a.yg)("a",c({parentName:"td"},{href:"/tql2/operators/write_ssv"}),(0,a.yg)("inlineCode",{parentName:"a"},"ssv"))),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},"<space>")),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},",")),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},"-"))),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",c({parentName:"tr"},{align:null}),(0,a.yg)("a",c({parentName:"td"},{href:"/tql2/operators/write_tsv"}),(0,a.yg)("inlineCode",{parentName:"a"},"tsv"))),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},"\\t")),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},",")),(0,a.yg)("td",c({parentName:"tr"},{align:"center"}),(0,a.yg)("inlineCode",{parentName:"td"},"-"))))),(0,a.yg)("p",null,"Note that nested records have dot-separated field names."),(0,a.yg)("h3",c({},{id:"field_sep-str"}),(0,a.yg)("inlineCode",{parentName:"h3"},"field_sep: str")),(0,a.yg)("p",null,"The string separating different fields."),(0,a.yg)("h3",c({},{id:"list_sep-str"}),(0,a.yg)("inlineCode",{parentName:"h3"},"list_sep: str")),(0,a.yg)("p",null,"The string separating different elements in a list within a single field."),(0,a.yg)("h3",c({},{id:"null_value-str"}),(0,a.yg)("inlineCode",{parentName:"h3"},"null_value: str")),(0,a.yg)("p",null,"The string denoting an absent value."),(0,a.yg)("h3",c({},{id:"no_headerbool-optional"}),(0,a.yg)("inlineCode",{parentName:"h3"},"no_header=bool (optional)")),(0,a.yg)("p",null,"Whether to not print a header line containing the field names."),(0,a.yg)("h2",c({},{id:"examples"}),"Examples"))}w.isMDXComponent=!0}}]);