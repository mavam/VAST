"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66867],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>f});var a=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=i,f=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(f,r(r({ref:t},c),{},{components:n})):a.createElement(f,r({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},60171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>x,frontMatter:()=>f,metadata:()=>m,toc:()=>v});var a=n(15680),i=Object.defineProperty,o=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(s)for(var n of s(t))l.call(t,n)&&c(e,n,t[n]);return e},u=(e,t)=>o(e,r(t)),h=(e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&l.call(e,a)&&(n[a]=e[a]);return n};const f={},g="Packages",m={unversionedId:"packages",id:"packages",title:"Packages",description:"A package is a set of pipelines and contexts that are thematically related",source:"@site/docs/packages.md",sourceDirName:".",slug:"/packages",permalink:"/next/packages",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/packages.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Configuration",permalink:"/next/configuration"},next:{title:"REST API",permalink:"/next/rest-api"}},y={},v=[{value:"Anatomy of a Package",id:"anatomy-of-a-package",level:2},{value:"Package Format",id:"package-format",level:2},{value:"Package Metadata",id:"package-metadata",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Examples",id:"examples",level:3},{value:"Pipelines and Contexts",id:"pipelines-and-contexts",level:3},{value:"User Configuration",id:"user-configuration",level:2},{value:"Inputs",id:"inputs-1",level:3},{value:"Overrides",id:"overrides",level:3}],b={toc:v},k="wrapper";function x(e){var t=e,{components:n}=t,i=h(t,["components"]);return(0,a.yg)(k,u(d(d({},b),i),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",d({},{id:"packages"}),"Packages"),(0,a.yg)("p",null,"A ",(0,a.yg)("strong",{parentName:"p"},"package")," is a set of pipelines and contexts that are thematically related\nand deployed together as a single unit."),(0,a.yg)("h2",d({},{id:"anatomy-of-a-package"}),"Anatomy of a Package"),(0,a.yg)("p",null,"A package definition consists of four major parts."),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Package metadata, for example the name, author and description of the\npackage."),(0,a.yg)("li",{parentName:"ol"},"Examples, which are prepared pipelines for use with the Explorer on\n",(0,a.yg)("a",d({parentName:"li"},{href:"https://app.tenzir.com/explorer"}),"app.tenzir.com")," that demonstrate how to use\nthe package."),(0,a.yg)("li",{parentName:"ol"},"A set of inputs that can be provided by the user to customize the package\ninstallation to their environment."),(0,a.yg)("li",{parentName:"ol"},"A set of pipelines and contexts that make up the contents of the package.")),(0,a.yg)("h2",d({},{id:"package-format"}),"Package Format"),(0,a.yg)("p",null,"The following describes the fields of a package definition."),(0,a.yg)("h3",d({},{id:"package-metadata"}),"Package Metadata"),(0,a.yg)("p",null,"Packages start with a set of metadata describing the package."),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{className:"language-yaml"}),"# The unique id of the package (required).\nid: feodo\n\n# \nversion:\n\n# The display name of the package and a path to an icon for the package.\nname: Feodo Abuse Blocklist\npackage_icon: null\n\n# The display name of the package author and a path to a profile picture.\nauthor: Tenzir\nauthor_icon: https://github.com/tenzir.png\n\n# A user-facing description of the package.\ndescription: |\n  Feodo Tracker is a project of abuse.ch with the goal of sharing botnet C&C\n  servers associated with Dridex, Emotet (aka Heodo), TrickBot, QakBot (aka\n  QuakBot / Qbot) and BazarLoader (aka BazarBackdoor). It offers various\n  blocklists, helping network owners to protect their users from Dridex and\n  Emotet/Heodo.\n")),(0,a.yg)("h3",d({},{id:"inputs"}),"Inputs"),(0,a.yg)("p",null,"Packages may define inputs to allow customizing a package installation. This\nallows the package definition to be independent of the user's local environment."),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{className:"language-yaml"}),"# Define user inputs to customize the package installation.\ninputs:\n  # Every input must have a unique id.\n  refresh-rate:\n    # A user-facing name for the input (required).\n    name: Refresh Rate\n    # A user-facing description of the input.\n    description: |\n      The interval at which the Feodo Tracker context is refreshed. Defaults to\n      refreshing every second.\n    # An (optional) default value for the input. The input is required if there\n    # is no input value.\n    default: 1s\n")),(0,a.yg)("p",null,"Inputs can be referenced in pipeline and example definitions and in context arguments\nwith the syntax ",(0,a.yg)("inlineCode",{parentName:"p"},"{{ inputs.input-name }}"),". They are replaced by their configured values\nwhen installing a package. For example, with the input configured as above the pipeline\n",(0,a.yg)("inlineCode",{parentName:"p"},"every {{ inputs.refresh-rate }} { version }")," would print the version once per second by default."),(0,a.yg)("p",null,"To write double curly braces, use the syntax ",(0,a.yg)("inlineCode",{parentName:"p"},"{{ '{{' }}")," to produce the\nliteral string enclosed inside the single quotes."),(0,a.yg)("h3",d({},{id:"examples"}),"Examples"),(0,a.yg)("p",null,"Packages may include snippets that showcase how to use the package, e.g., by\nshowing how to display a chart that visualizes data imported by a package, or by\nproviding a set of usage examples for data provided by a package."),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{className:"language-yaml"}),'# Examples contain a name, a description, and a pipeline definition for use with\n# the explorer on app.tenzir.com.\nexamples:\n  - name: Match historical and live data against the `feodo` context\n    description: |\n      Find persisted events that have an IP address matching the `feodo`\n      context.\n    definition: |\n      lookup feodo --field :ip\n  - name: Visualize successful lookups with the `feodo` context in the last week\n    description: |\n      Creates a stacked area chart that shows the number of hourly hits of\n      pipelines using the `lookup` operator with the `feodo` context.\n    definition: |\n      metrics lookup\n      | where context == "feodo"\n      | where timestamp > 7d ago\n      | summarize retro_hits=sum(retro.hits), live_hits=sum(live.hits) by timestamp resolution 1h\n      | sort timestamp\n      | chart area --position stacked\n')),(0,a.yg)("h3",d({},{id:"pipelines-and-contexts"}),"Pipelines and Contexts"),(0,a.yg)("p",null,"A package is a unit of pipelines and contexts that is deployed together. This is\nwhere you define them:"),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{className:"language-yaml"}),"# Define any number of pipelines.\npipelines:\n  update-context:\n    # An optional user-facing name for the pipeline. Defaults to the id.\n    name: Update Feodo Context\n    # An optional user-facing description of the pipeline.\n    description: |\n      Periodically refresh the Feodo lookup-table context.\n    # The definition of the pipeline. Configured pipelines that fail to start\n    # cause the node to fail to start.\n    definition: |\n      every ${{ inputs.refresh-rate }} from https://feodotracker.abuse.ch/downloads/ipblocklist_aggressive.csv read csv --allow-comments\n      | context update feodo --key dst_ip\n    # Pipelines that encounter an error stop running and show an error state.\n    # This option causes pipelines to automatically restart when they\n    # encounter an error instead. The first restart happens immediately, and\n    # subsequent restarts after the configured delay, defaulting to 1 minute.\n    # The following values are valid for this option:\n    # - Omit the option, or set it to null or false to disable.\n    # - Set the option to true to enable with the default delay of 1 minute.\n    # - Set the option to a valid duration to enable with a custom delay.\n    restart-on-error: 1 minute\n    # Disables the pipeline.\n    disabled: false\n    # Pipelines that are unstoppable will run automatically and indefinitely.\n    # They are not able to pause or stop.\n    # If they do complete, they will end up in a failed state.\n    # If `restart-on-error` is enabled, they will restart after the specified\n    # duration.\n    unstoppable: true\n\n# Define any number of contexts.\ncontexts:\n  # A unique name for the context that's used in the context, enrich, and\n  # lookup operators to refer to the context.\n  feodo:\n    # The type of the context (required).\n    type: lookup-table\n    # An optional user-facing description of the context.\n    description: |\n      A lookup table that contains the elements of the feodo IP blocklist.\n    # Arguments for creating the context, depending on the type. Refer to the\n    # documentation of the individual context types to see the arguments they\n    # require. Note that changes to these arguments do not apply to any\n    # contexts that were previously created.\n    args: {}\n    # Disables the context.\n    disabled: false\n")),(0,a.yg)("admonition",d({},{title:"Use packages",type:"tip"}),(0,a.yg)("p",{parentName:"admonition"},"Start using packages by ",(0,a.yg)("a",d({parentName:"p"},{href:"/next/installation/install-a-package"}),"installing one"),".")),(0,a.yg)("h2",d({},{id:"user-configuration"}),"User Configuration"),(0,a.yg)("p",null,"In order to install a package from the library, you may want to adjust\nthe package to your own preferences and local environment. To do this,\nadd a new key ",(0,a.yg)("inlineCode",{parentName:"p"},"config")," to the package definition:"),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{}),'config:\n  # An optional string to identify the package version being installed.\n  version: "4.0"\n\n  # An unambigous description of the upstream source of this package.\n  source:\n    repository: https://github.com/tenzir/library\n    directory: zeek/\n    revision: 1274bd6042e4b74d07363643b5b01811e191b74c\n\n  # A dictionary mapping input fields to their desired values.\n  inputs:\n    filename: /opt/zeek/data.tsv\n\n  # A set of keys that override the corresponding fields in the package definition.\n  overrides:\n    pipelines:\n      example-pipeline:\n        disabled: true\n\n  # Opaque extra data that is ignored by the node.\n  metadata:\n    ansible:\n      deployment_id: 483dej2\n\n')),(0,a.yg)("h3",d({},{id:"inputs-1"}),"Inputs"),(0,a.yg)("p",null,"Pipeline and context definitions may contain references to user-defined variables,\nas in ",(0,a.yg)("inlineCode",{parentName:"p"},"from {{ inputs.filename }} version"),", that are replaced by their\nconfigured value when installing the package."),(0,a.yg)("p",null,"In order to provide non-default values for the defined inputs, use the ",(0,a.yg)("inlineCode",{parentName:"p"},"config.inputs"),"\nkey:"),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{}),"config:\n  inputs:\n    filename: /opt/zeek/data.tsv\n")),(0,a.yg)("h3",d({},{id:"overrides"}),"Overrides"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"config.overrides")," object is used to change the value of any field in the\npackage definition. This is intended to customize fields like ",(0,a.yg)("inlineCode",{parentName:"p"},"disabled")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"restart-on-error"),"\nin pipeline definitions:"),(0,a.yg)("pre",null,(0,a.yg)("code",d({parentName:"pre"},{}),"config:\n  overrides:\n    pipelines:\n      example-pipeline:\n        disabled: true\n")))}x.isMDXComponent=!0}}]);