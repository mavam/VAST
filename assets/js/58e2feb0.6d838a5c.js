"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67768],{15680:(e,a,t)=>{t.d(a,{xA:()=>g,yg:()=>d});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),i=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},g=function(e){var a=i(e.components);return n.createElement(s.Provider,{value:a},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,p=e.originalType,s=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),y=i(t),m=r,d=y["".concat(s,".").concat(m)]||y[m]||u[m]||p;return t?n.createElement(d,l(l({ref:a},g),{},{components:t})):n.createElement(d,l({ref:a},g))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var p=t.length,l=new Array(p);l[0]=m;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[y]="string"==typeof e?e:r,l[1]=o;for(var i=2;i<p;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},94983:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>f,contentTitle:()=>c,default:()=>v,frontMatter:()=>d,metadata:()=>N,toc:()=>F});var n=t(15680),r=Object.defineProperty,p=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,g=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))s.call(a,t)&&g(e,t,a[t]);if(o)for(var t of o(a))i.call(a,t)&&g(e,t,a[t]);return e},u=(e,a)=>p(e,l(a)),m=(e,a)=>{var t={};for(var n in e)s.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&o)for(var n of o(e))a.indexOf(n)<0&&i.call(e,n)&&(t[n]=e[n]);return t};const d={},c="summarize",N={unversionedId:"tql2/operators/summarize",id:"tql2/operators/summarize",title:"summarize",description:"Groups events and applies aggregate functions to each group.",source:"@site/docs/tql2/operators/summarize.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/summarize",permalink:"/next/tql2/operators/summarize",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/tql2/operators/summarize.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"subscribe",permalink:"/next/tql2/operators/subscribe"},next:{title:"tail",permalink:"/next/tql2/operators/tail"}},f={},F=[{value:"Description",id:"description",level:2},{value:"<code>group</code>",id:"group",level:3},{value:"<code>aggregation</code>",id:"aggregation",level:3},{value:"Examples",id:"examples",level:2},{value:"Compute the sum of a field over all events",id:"compute-the-sum-of-a-field-over-all-events",level:3},{value:"Gather unique values in a list",id:"gather-unique-values-in-a-list",level:3},{value:"Compute min and max of a group",id:"compute-min-and-max-of-a-group",level:3},{value:"Check if any value of a group is true",id:"check-if-any-value-of-a-group-is-true",level:3},{value:"Create 1-hour time buckets",id:"create-1-hour-time-buckets",level:3}],h={toc:F},E="wrapper";function v(e){var a=e,{components:t}=a,r=m(a,["components"]);return(0,n.yg)(E,u(y(y({},h),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"summarize"}),"summarize"),(0,n.yg)("p",null,"Groups events and applies aggregate functions to each group."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," (group"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"|"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"aggregation)"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"..."))))),(0,n.yg)("h2",y({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"summarize")," operator groups events according to certain fields and applies\naggregation functions to each group. The operator consumes the entire input\nbefore producing any output."),(0,n.yg)("p",null,"The order of the output fields follows the sequence of the provided arguments.\nUnspecified fields are dropped."),(0,n.yg)("admonition",y({},{title:"Potentially High Memory Usage",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"Take care when using this operator with large inputs.")),(0,n.yg)("h3",y({},{id:"group"}),(0,n.yg)("inlineCode",{parentName:"h3"},"group")),(0,n.yg)("p",null,"To group by a certain field, use the syntax ",(0,n.yg)("inlineCode",{parentName:"p"},"<field>")," or ",(0,n.yg)("inlineCode",{parentName:"p"},"<field>=<field>"),". For\neach unique combination of the ",(0,n.yg)("inlineCode",{parentName:"p"},"group")," fields, a single output event will be\nreturned."),(0,n.yg)("h3",y({},{id:"aggregation"}),(0,n.yg)("inlineCode",{parentName:"h3"},"aggregation")),(0,n.yg)("p",null,"The aggregation functions applied to each group are specified with ",(0,n.yg)("inlineCode",{parentName:"p"},"f(\u2026)")," or\n",(0,n.yg)("inlineCode",{parentName:"p"},"<field>=f(\u2026)"),", where ",(0,n.yg)("inlineCode",{parentName:"p"},"f")," is the name of an aggregation function (see below) and\n",(0,n.yg)("inlineCode",{parentName:"p"},"<field>")," is an optional name for the result. The aggregation function will\nproduce a single result for each group."),(0,n.yg)("p",null,"If no name is specified, it will be automatically generated from the aggregation\nfunction call. If processing continues after ",(0,n.yg)("inlineCode",{parentName:"p"},"summarize"),", it is strongly\nrecommended to specify a custom name."),(0,n.yg)("p",null,"The following aggregation functions are available and, unless specified\ndifferently, take exactly one argument:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"sum"),": Computes the sum of all grouped values."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"min"),": Computes the minimum of all grouped values."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"max"),": Computes the maximum of all grouped values."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"any"),": Computes the disjunction (OR) of all grouped values. Requires the\nvalues to be booleans."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"all"),": Computes the conjunction (AND) of all grouped values. Requires the\nvalues to be booleans."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"first"),": Takes the first of all grouped values that is not null."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"last"),": Takes the last of all grouped values that is not null."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"mean"),": Computes the mean of all grouped values."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"median"),": Computes the approximate median of all grouped values with a\nt-digest algorithm."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"mode"),": Takes the most common of all grouped values that is not null."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"value_counts"),": Returns a list of all grouped values alongside their\nfrequency."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"quantile"),": Computes the quantile specified by the named argument ",(0,n.yg)("inlineCode",{parentName:"li"},"q"),", for\nexample: ",(0,n.yg)("inlineCode",{parentName:"li"},"quantile(x, q=0.2)"),"."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"stddev"),": Computes the standard deviation of all grouped values."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"variance"),": Computes the variance of all grouped values."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"distinct"),": Creates a sorted list without duplicates of all grouped values\nthat are not null."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"collect"),": Creates a list of all grouped values that are not null, preserving\nduplicates."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"count"),": When used as ",(0,n.yg)("inlineCode",{parentName:"li"},"count()"),", simply counts the events in the group. When\nused as ",(0,n.yg)("inlineCode",{parentName:"li"},"count(x)"),", counts all grouped values that are not null."),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"count_distinct"),": Counts all distinct grouped values that are not null.")),(0,n.yg)("h2",y({},{id:"examples"}),"Examples"),(0,n.yg)("h3",y({},{id:"compute-the-sum-of-a-field-over-all-events"}),"Compute the sum of a field over all events"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"from"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," [{x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}, {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 2"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}]")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(x)"))))),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"{x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 3"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,n.yg)("p",null,"Group over ",(0,n.yg)("inlineCode",{parentName:"p"},"y")," and compute the sum of ",(0,n.yg)("inlineCode",{parentName:"p"},"x")," for each group:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"from"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," [")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", z"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"},")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", z"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 2"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"},")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", z"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 3"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"},")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"]")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," y, x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(x)"))))),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"{y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"{y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 2"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,n.yg)("h3",y({},{id:"gather-unique-values-in-a-list"}),"Gather unique values in a list"),(0,n.yg)("p",null,"Group the input by ",(0,n.yg)("inlineCode",{parentName:"p"},"src_ip")," and aggregate all unique ",(0,n.yg)("inlineCode",{parentName:"p"},"dest_port")," values into a\nlist:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," src_ip, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"distinct"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(dest_port)"))))),(0,n.yg)("p",null,"Same as above, but produce a count of the unique number of values instead of a\nlist:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," src_ip, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"count_distinct"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(dest_port)"))))),(0,n.yg)("h3",y({},{id:"compute-min-and-max-of-a-group"}),"Compute min and max of a group"),(0,n.yg)("p",null,"Compute minimum and maximum of the ",(0,n.yg)("inlineCode",{parentName:"p"},"timestamp")," field per ",(0,n.yg)("inlineCode",{parentName:"p"},"src_ip")," group:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}})," min"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp), "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"max"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp), src_ip"))))),(0,n.yg)("p",null,"Compute minimum and maximum of the ",(0,n.yg)("inlineCode",{parentName:"p"},"timestamp")," field over all events:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}})," min"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp), "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"max"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp)"))))),(0,n.yg)("h3",y({},{id:"check-if-any-value-of-a-group-is-true"}),"Check if any value of a group is true"),(0,n.yg)("p",null,"Create a boolean flag ",(0,n.yg)("inlineCode",{parentName:"p"},"originator")," that is ",(0,n.yg)("inlineCode",{parentName:"p"},"true")," if any value in the ",(0,n.yg)("inlineCode",{parentName:"p"},"src_ip"),"\ngroup is ",(0,n.yg)("inlineCode",{parentName:"p"},"true"),":"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," src_ip, originator"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"any"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(is_orig)"))))),(0,n.yg)("h3",y({},{id:"create-1-hour-time-buckets"}),"Create 1-hour time buckets"),(0,n.yg)("p",null,"Create 1-hour groups and produce a summary of network traffic between host\npairs:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"ts "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}})," round"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(ts, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"1h"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),")")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," ts, src_ip, dest_ip, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(bytes_in), "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(bytes_out)"))))))}v.isMDXComponent=!0}}]);