"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32465],{15680:(e,a,t)=>{t.d(a,{xA:()=>d,yg:()=>g});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),i=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},d=function(e){var a=i(e.components);return n.createElement(o.Provider,{value:a},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),y=i(t),c=r,g=y["".concat(o,".").concat(c)]||y[c]||m[c]||l;return t?n.createElement(g,s(s({ref:a},d),{},{components:t})):n.createElement(g,s({ref:a},d))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=c;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[y]="string"==typeof e?e:r,s[1]=p;for(var i=2;i<l;i++)s[i]=t[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3496:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>h,contentTitle:()=>u,default:()=>E,frontMatter:()=>g,metadata:()=>f,toc:()=>v});var n=t(15680),r=Object.defineProperty,l=Object.defineProperties,s=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,d=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))o.call(a,t)&&d(e,t,a[t]);if(p)for(var t of p(a))i.call(a,t)&&d(e,t,a[t]);return e},m=(e,a)=>l(e,s(a)),c=(e,a)=>{var t={};for(var n in e)o.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&i.call(e,n)&&(t[n]=e[n]);return t};const g={sidebar_custom_props:{format:{parser:!0,printer:!0}}},u="xsv",f={unversionedId:"formats/xsv",id:"version-v4.19/formats/xsv",title:"xsv",description:"Reads and writes lines with separated values.",source:"@site/versioned_docs/version-v4.19/formats/xsv.md",sourceDirName:"formats",slug:"/formats/xsv",permalink:"/v4.19/formats/xsv",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.19/formats/xsv.md",tags:[],version:"v4.19",frontMatter:{sidebar_custom_props:{format:{parser:!0,printer:!0}}},sidebar:"docsSidebar",previous:{title:"tsv",permalink:"/v4.19/formats/tsv"},next:{title:"yaml",permalink:"/v4.19/formats/yaml"}},h={},v=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;field-sep&gt;</code>",id:"field-sep",level:3},{value:"<code>&lt;list-sep&gt;</code>",id:"list-sep",level:3},{value:"<code>&lt;null-value&gt;</code>",id:"null-value",level:3},{value:"<code>--allow-comments</code> (Parser)",id:"--allow-comments-parser",level:3},{value:"`--auto-expand (Parser)",id:"--auto-expand-parser",level:3},{value:"<code>--header &lt;header&gt;</code> (Parser)",id:"--header-header-parser",level:3},{value:"<code>--no-header</code> (Printer)",id:"--no-header-printer",level:3},{value:"Examples",id:"examples",level:2}],N={toc:v},b="wrapper";function E(e){var a=e,{components:t}=a,r=c(a,["components"]);return(0,n.yg)(b,m(y(y({},N),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"xsv"}),"xsv"),(0,n.yg)("p",null,"Reads and writes lines with separated values."),(0,n.yg)("h2",y({},{id:"synopsis"}),"Synopsis"),(0,n.yg)("p",null,"Parser:"),(0,n.yg)("pre",null,(0,n.yg)("code",y({parentName:"pre"},{}),"csv [--allow-comments] [--auto-expand] [--header <header>]\nssv [--allow-comments] [--auto-expand] [--header <header>]\ntsv [--allow-comments] [--auto-expand] [--header <header>]\nxsv <field-sep> <list-sep> <null-value> [--allow-comments] [--auto-expand] [--header <header>]\n")),(0,n.yg)("p",null,"Printer:"),(0,n.yg)("pre",null,(0,n.yg)("code",y({parentName:"pre"},{}),"csv [--no-header]\nssv [--no-header]\ntsv [--no-header]\nxsv <field-sep> <list-sep> <null-value> [--no-header]\n")),(0,n.yg)("h2",y({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"xsv")," format is a generalization of ",(0,n.yg)("a",y({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Comma-separated_values"}),"comma-separated values (CSV)")," data\nin tabular form with a more flexible separator specification supporting tabs,\ncommas, and spaces. The first line in an XSV file is the header that describes\nthe field names. The remaining lines contain concrete values. One line\ncorresponds to one event, minus the header."),(0,n.yg)("p",null,"The following table juxtaposes the available XSV configurations:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",y({parentName:"tr"},{align:null}),"Format"),(0,n.yg)("th",y({parentName:"tr"},{align:"center"}),"Field Separator"),(0,n.yg)("th",y({parentName:"tr"},{align:"center"}),"List Separator"),(0,n.yg)("th",y({parentName:"tr"},{align:"center"}),"Null Value"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/v4.19/formats/csv"}),(0,n.yg)("inlineCode",{parentName:"a"},"csv"))),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},",")),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},";")),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),"empty")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/v4.19/formats/ssv"}),(0,n.yg)("inlineCode",{parentName:"a"},"ssv"))),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},"<space>")),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},",")),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},"-"))),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",y({parentName:"tr"},{align:null}),(0,n.yg)("a",y({parentName:"td"},{href:"/v4.19/formats/tsv"}),(0,n.yg)("inlineCode",{parentName:"a"},"tsv"))),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},"\\t")),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},",")),(0,n.yg)("td",y({parentName:"tr"},{align:"center"}),(0,n.yg)("inlineCode",{parentName:"td"},"-"))))),(0,n.yg)("p",null,"Like the ",(0,n.yg)("a",y({parentName:"p"},{href:"/v4.19/formats/json"}),(0,n.yg)("inlineCode",{parentName:"a"},"json"))," parser, the XSV parser infers types automatically.\nConsider this piece of CSV data:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"csv","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"csv","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"ip,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"sn,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"str,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#8B949E"}}),"rec.a,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"rec.b")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"1.2.3.4,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"10.0.0.0/8,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"foo bar,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#8B949E"}}),"-4.2,"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"/foo|bar/"))))),(0,n.yg)("p",null,"Here's the schema that the parser infers from the above data:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"yaml","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"yaml","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"record"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  - "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"ip"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"ip")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  - "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"sn"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"subnet")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  - "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"str"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"string")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  - "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"record"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"    - "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"a"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"double")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"    - "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#7EE787"}}),"b"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"pattern"))))),(0,n.yg)("p",null,"Note that nested records have dot-separated field names."),(0,n.yg)("h3",y({},{id:"field-sep"}),(0,n.yg)("inlineCode",{parentName:"h3"},"<field-sep>")),(0,n.yg)("p",null,"Specifies the string that separates fields."),(0,n.yg)("h3",y({},{id:"list-sep"}),(0,n.yg)("inlineCode",{parentName:"h3"},"<list-sep>")),(0,n.yg)("p",null,"Specifies the string that separates list elements ",(0,n.yg)("em",{parentName:"p"},"within")," a field."),(0,n.yg)("h3",y({},{id:"null-value"}),(0,n.yg)("inlineCode",{parentName:"h3"},"<null-value>")),(0,n.yg)("p",null,"Specifies the string that denotes an absent value."),(0,n.yg)("h3",y({},{id:"--allow-comments-parser"}),(0,n.yg)("inlineCode",{parentName:"h3"},"--allow-comments")," (Parser)"),(0,n.yg)("p",null,"Treat lines beginning with ",(0,n.yg)("inlineCode",{parentName:"p"},"'#'")," as comments."),(0,n.yg)("h3",y({},{id:"--auto-expand-parser"}),"`--auto-expand (Parser)"),(0,n.yg)("p",null,"Automatically add fields to the schema when encountering events with too many\nvalues instead of dropping the excess values."),(0,n.yg)("h3",y({},{id:"--header-header-parser"}),(0,n.yg)("inlineCode",{parentName:"h3"},"--header <header>")," (Parser)"),(0,n.yg)("p",null,"Use the manually provided header line instead of treating the first line as the\nheader."),(0,n.yg)("h3",y({},{id:"--no-header-printer"}),(0,n.yg)("inlineCode",{parentName:"h3"},"--no-header")," (Printer)"),(0,n.yg)("p",null,"Do not print a header line containing the field names."),(0,n.yg)("h2",y({},{id:"examples"}),"Examples"),(0,n.yg)("p",null,"Read CSV from stdin:"),(0,n.yg)("pre",null,(0,n.yg)("code",y({parentName:"pre"},{}),"from stdin read csv\n")),(0,n.yg)("p",null,"Write a multi-schema stream of events to a directory in TSV format, with one\nfile per unique schema:"),(0,n.yg)("pre",null,(0,n.yg)("code",y({parentName:"pre"},{}),"to directory /tmp/result write tsv\n")))}E.isMDXComponent=!0}}]);