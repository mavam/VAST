"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13751],{15680:(e,t,a)=>{a.d(t,{xA:()=>s,yg:()=>m});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=d(a),y=n,m=c["".concat(l,".").concat(y)]||c[y]||g[y]||p;return a?r.createElement(m,o(o({ref:t},s),{},{components:a})):r.createElement(m,o({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,o=new Array(p);o[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var d=2;d<p;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}y.displayName="MDXCreateElement"},72329:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>f,default:()=>k,frontMatter:()=>m,metadata:()=>u,toc:()=>N});var r=a(15680),n=Object.defineProperty,p=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,s=(e,t,a)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&s(e,a,t[a]);if(i)for(var a of i(t))d.call(t,a)&&s(e,a,t[a]);return e},g=(e,t)=>p(e,o(t)),y=(e,t)=>{var a={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&d.call(e,r)&&(a[r]=e[r]);return a};const m={},f="read_pcap",u={unversionedId:"tql2/operators/read_pcap",id:"version-v4.24/tql2/operators/read_pcap",title:"read_pcap",description:"Reads raw network packets in PCAP file format.",source:"@site/versioned_docs/version-v4.24/tql2/operators/read_pcap.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/read_pcap",permalink:"/tql2/operators/read_pcap",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.24/tql2/operators/read_pcap.md",tags:[],version:"v4.24",frontMatter:{},sidebar:"docsSidebar",previous:{title:"read_parquet",permalink:"/tql2/operators/read_parquet"},next:{title:"read_ssv",permalink:"/tql2/operators/read_ssv"}},h={},N=[{value:"Description",id:"description",level:2},{value:"<code>emit_file_headers = bool (optional)</code>",id:"emit_file_headers--bool-optional",level:3},{value:"Schemas",id:"schemas",level:2},{value:"<code>pcap.packet</code>",id:"pcappacket",level:3},{value:"Examples",id:"examples",level:2},{value:"Read packets from a PCAP file:",id:"read-packets-from-a-pcap-file",level:3},{value:"Read packets from the network interface <code>eth0</code>:",id:"read-packets-from-the-network-interface-eth0",level:3}],b={toc:N},v="wrapper";function k(e){var t=e,{components:a}=t,n=y(t,["components"]);return(0,r.yg)(v,g(c(c({},b),n),{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",c({},{id:"read_pcap"}),"read_pcap"),(0,r.yg)("p",null,"Reads raw network packets in ",(0,r.yg)("a",c({parentName:"p"},{href:"https://datatracker.ietf.org/doc/id/draft-gharris-opsawg-pcap-00.html"}),"PCAP")," file format."),(0,r.yg)("figure",c({},{"data-rehype-pretty-code-figure":""}),(0,r.yg)("pre",c({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,r.yg)("code",c({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,r.yg)("span",c({parentName:"code"},{"data-line":""}),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"read_pcap"),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}})," [emit_file_headers"),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}}),"bool]"))))),(0,r.yg)("h2",c({},{id:"description"}),"Description"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"read_pcap")," operator converts raw bytes representing a ",(0,r.yg)("a",c({parentName:"p"},{href:"https://datatracker.ietf.org/doc/id/draft-gharris-opsawg-pcap-00.html"}),"PCAP")," file into\nevents."),(0,r.yg)("admonition",c({},{title:"PCAPNG",type:"note"}),(0,r.yg)("p",{parentName:"admonition"},"The current implementation does ",(0,r.yg)("em",{parentName:"p"},"not")," support ",(0,r.yg)("a",c({parentName:"p"},{href:"https://www.ietf.org/archive/id/draft-tuexen-opsawg-pcapng-05.html"}),"PCAPNG"),". Please\n",(0,r.yg)("a",c({parentName:"p"},{href:"/discord"}),"reach out")," if you would like to see support.")),(0,r.yg)("h3",c({},{id:"emit_file_headers--bool-optional"}),(0,r.yg)("inlineCode",{parentName:"h3"},"emit_file_headers = bool (optional)")),(0,r.yg)("p",null,"Emit a ",(0,r.yg)("inlineCode",{parentName:"p"},"pcap.file_header")," event that represents the PCAP file header. If\npresent, the parser injects this additional event before the subsequent stream\nof packets."),(0,r.yg)("p",null,"Emitting this extra event makes it possible to seed the ",(0,r.yg)("a",c({parentName:"p"},{href:"/tql2/operators/write_pcap"}),(0,r.yg)("inlineCode",{parentName:"a"},"write_pcap"))," operator with a\nfile header from the input. This allows for controlling the timestamp formatting\n(microseconds vs. nanosecond granularity) and byte order in the packet headers."),(0,r.yg)("p",null,"When the PCAP parser processes a concatenated stream of PCAP files, specifying\n",(0,r.yg)("inlineCode",{parentName:"p"},"emit_file_headers")," will also re-emit every intermediate file header as\nseparate event."),(0,r.yg)("p",null,"Use this option when you would like to reproduce the identical trace file layout\nof the PCAP input."),(0,r.yg)("h2",c({},{id:"schemas"}),"Schemas"),(0,r.yg)("p",null,"The operator emits events with the following schema."),(0,r.yg)("h3",c({},{id:"pcappacket"}),(0,r.yg)("inlineCode",{parentName:"h3"},"pcap.packet")),(0,r.yg)("p",null,"Contains information about all accessed API endpoints, emitted once per second."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",c({parentName:"tr"},{align:"left"}),"Field"),(0,r.yg)("th",c({parentName:"tr"},{align:"left"}),"Type"),(0,r.yg)("th",c({parentName:"tr"},{align:"left"}),"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"timestamp")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"time")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),"The time of capturing the packet.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"linktype")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"uint64")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),"The linktype of the captured packet.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"original_packet_length")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"uint64")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),"The length of the original packet.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"captured_packet_length")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"uint64")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),"The length of the captured packet.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"data")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),(0,r.yg)("inlineCode",{parentName:"td"},"blob")),(0,r.yg)("td",c({parentName:"tr"},{align:"left"}),"The captured packet's data as a blob.")))),(0,r.yg)("h2",c({},{id:"examples"}),"Examples"),(0,r.yg)("h3",c({},{id:"read-packets-from-a-pcap-file"}),"Read packets from a PCAP file:"),(0,r.yg)("figure",c({},{"data-rehype-pretty-code-figure":""}),(0,r.yg)("pre",c({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,r.yg)("code",c({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,r.yg)("span",c({parentName:"code"},{"data-line":""}),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"load_file"),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#A5D6FF"}}),' "/tmp/trace.pcap"')),"\n",(0,r.yg)("span",c({parentName:"code"},{"data-line":""}),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"read_pcap"))))),(0,r.yg)("h3",c({},{id:"read-packets-from-the-network-interface-eth0"}),"Read packets from the ",(0,r.yg)("a",c({parentName:"h3"},{href:"/tql2/operators/load_nic"}),"network interface")," ",(0,r.yg)("inlineCode",{parentName:"h3"},"eth0"),":"),(0,r.yg)("figure",c({},{"data-rehype-pretty-code-figure":""}),(0,r.yg)("pre",c({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,r.yg)("code",c({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,r.yg)("span",c({parentName:"code"},{"data-line":""}),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"load_nic"),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#A5D6FF"}}),' "eth0"')),"\n",(0,r.yg)("span",c({parentName:"code"},{"data-line":""}),(0,r.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"read_pcap"))))))}k.isMDXComponent=!0}}]);