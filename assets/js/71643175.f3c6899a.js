"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[56589],{15680:(e,a,t)=>{t.d(a,{xA:()=>g,yg:()=>d});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),i=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},g=function(e){var a=i(e.components);return n.createElement(l.Provider,{value:a},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),y=i(t),u=r,d=y["".concat(l,".").concat(u)]||y[u]||m[u]||p;return t?n.createElement(d,o(o({ref:a},g),{},{components:t})):n.createElement(d,o({ref:a},g))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var p=t.length,o=new Array(p);o[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[y]="string"==typeof e?e:r,o[1]=s;for(var i=2;i<p;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},46310:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>N,contentTitle:()=>c,default:()=>b,frontMatter:()=>d,metadata:()=>f,toc:()=>F});var n=t(15680),r=Object.defineProperty,p=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,g=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))l.call(a,t)&&g(e,t,a[t]);if(s)for(var t of s(a))i.call(a,t)&&g(e,t,a[t]);return e},m=(e,a)=>p(e,o(a)),u=(e,a)=>{var t={};for(var n in e)l.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&s)for(var n of s(e))a.indexOf(n)<0&&i.call(e,n)&&(t[n]=e[n]);return t};const d={},c="summarize",f={unversionedId:"tql2/operators/summarize",id:"version-v4.23/tql2/operators/summarize",title:"summarize",description:"Groups events and applies aggregate functions to each group.",source:"@site/versioned_docs/version-v4.23/tql2/operators/summarize.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/summarize",permalink:"/v4.23/tql2/operators/summarize",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.23/tql2/operators/summarize.md",tags:[],version:"v4.23",frontMatter:{},sidebar:"docsSidebar",previous:{title:"subscribe",permalink:"/v4.23/tql2/operators/subscribe"},next:{title:"tail",permalink:"/v4.23/tql2/operators/tail"}},N={},F=[{value:"Description",id:"description",level:2},{value:"<code>group</code>",id:"group",level:3},{value:"<code>aggregation</code>",id:"aggregation",level:3},{value:"Examples",id:"examples",level:2},{value:"Compute the sum of a field over all events",id:"compute-the-sum-of-a-field-over-all-events",level:3},{value:"Gather unique values in a list",id:"gather-unique-values-in-a-list",level:3},{value:"Compute min and max of a group",id:"compute-min-and-max-of-a-group",level:3},{value:"Check if any value of a group is true",id:"check-if-any-value-of-a-group-is-true",level:3},{value:"Create 1-hour time buckets",id:"create-1-hour-time-buckets",level:3}],h={toc:F},E="wrapper";function b(e){var a=e,{components:t}=a,r=u(a,["components"]);return(0,n.yg)(E,m(y(y({},h),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"summarize"}),"summarize"),(0,n.yg)("p",null,"Groups events and applies aggregate functions to each group."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," (group"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"|"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"aggregation)"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"..."))))),(0,n.yg)("h2",y({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"summarize")," operator groups events according to certain fields and applies\n",(0,n.yg)("a",y({parentName:"p"},{href:"/v4.23/tql2/functions#aggregation"}),"aggregation functions")," to each group. The operator\nconsumes the entire input before producing any output."),(0,n.yg)("p",null,"The order of the output fields follows the sequence of the provided arguments.\nUnspecified fields are dropped."),(0,n.yg)("admonition",y({},{title:"Potentially High Memory Usage",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"Take care when using this operator with large inputs.")),(0,n.yg)("h3",y({},{id:"group"}),(0,n.yg)("inlineCode",{parentName:"h3"},"group")),(0,n.yg)("p",null,"To group by a certain field, use the syntax ",(0,n.yg)("inlineCode",{parentName:"p"},"<field>")," or ",(0,n.yg)("inlineCode",{parentName:"p"},"<field>=<field>"),". For\neach unique combination of the ",(0,n.yg)("inlineCode",{parentName:"p"},"group")," fields, a single output event will be\nreturned."),(0,n.yg)("h3",y({},{id:"aggregation"}),(0,n.yg)("inlineCode",{parentName:"h3"},"aggregation")),(0,n.yg)("p",null,"The ",(0,n.yg)("a",y({parentName:"p"},{href:"/v4.23/tql2/functions#aggregation"}),"aggregation functions")," applied to each group\nare specified with ",(0,n.yg)("inlineCode",{parentName:"p"},"f(\u2026)")," or ",(0,n.yg)("inlineCode",{parentName:"p"},"<field>=f(\u2026)"),", where ",(0,n.yg)("inlineCode",{parentName:"p"},"f")," is the name of an\naggregation function (see below) and ",(0,n.yg)("inlineCode",{parentName:"p"},"<field>")," is an optional name for the\nresult. The aggregation function will produce a single result for each group."),(0,n.yg)("p",null,"If no name is specified, the aggregation function call will automatically\ngenerate one. If processing continues after ",(0,n.yg)("inlineCode",{parentName:"p"},"summarize"),", we strongly recommend\nto specify a custom name."),(0,n.yg)("h2",y({},{id:"examples"}),"Examples"),(0,n.yg)("h3",y({},{id:"compute-the-sum-of-a-field-over-all-events"}),"Compute the sum of a field over all events"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"from"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," [{x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}, {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 2"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}]")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(x)"))))),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"{x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 3"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,n.yg)("p",null,"Group over ",(0,n.yg)("inlineCode",{parentName:"p"},"y")," and compute the sum of ",(0,n.yg)("inlineCode",{parentName:"p"},"x")," for each group:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"from"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," [")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", z"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"},")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", z"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 2"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"},")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"  {x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", z"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 3"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"},")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"]")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," y, x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(x)"))))),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"{y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 0"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"{y"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", x"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 2"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,n.yg)("h3",y({},{id:"gather-unique-values-in-a-list"}),"Gather unique values in a list"),(0,n.yg)("p",null,"Group the input by ",(0,n.yg)("inlineCode",{parentName:"p"},"src_ip")," and aggregate all unique ",(0,n.yg)("inlineCode",{parentName:"p"},"dest_port")," values into a\nlist:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," src_ip, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"distinct"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(dest_port)"))))),(0,n.yg)("p",null,"Same as above, but produce a count of the unique number of values instead of a\nlist:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," src_ip, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"count_distinct"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(dest_port)"))))),(0,n.yg)("h3",y({},{id:"compute-min-and-max-of-a-group"}),"Compute min and max of a group"),(0,n.yg)("p",null,"Compute minimum and maximum of the ",(0,n.yg)("inlineCode",{parentName:"p"},"timestamp")," field per ",(0,n.yg)("inlineCode",{parentName:"p"},"src_ip")," group:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}})," min"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp), "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"max"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp), src_ip"))))),(0,n.yg)("p",null,"Compute minimum and maximum of the ",(0,n.yg)("inlineCode",{parentName:"p"},"timestamp")," field over all events:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}})," min"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp), "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"max"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(timestamp)"))))),(0,n.yg)("h3",y({},{id:"check-if-any-value-of-a-group-is-true"}),"Check if any value of a group is true"),(0,n.yg)("p",null,"Create a boolean flag ",(0,n.yg)("inlineCode",{parentName:"p"},"originator")," that is ",(0,n.yg)("inlineCode",{parentName:"p"},"true")," if any value in the ",(0,n.yg)("inlineCode",{parentName:"p"},"src_ip"),"\ngroup is ",(0,n.yg)("inlineCode",{parentName:"p"},"true"),":"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," src_ip, originator"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"any"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(is_orig)"))))),(0,n.yg)("h3",y({},{id:"create-1-hour-time-buckets"}),"Create 1-hour time buckets"),(0,n.yg)("p",null,"Create 1-hour groups and produce a summary of network traffic between host\npairs:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"ts "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}})," round"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(ts, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"1h"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),")")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"summarize"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," ts, src_ip, dest_ip, "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(bytes_in), "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sum"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"(bytes_out)"))))))}b.isMDXComponent=!0}}]);