"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[73780],{15680:(e,a,t)=>{t.d(a,{xA:()=>c,yg:()=>m});var n=t(96540);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),i=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},c=function(e){var a=i(e.components);return n.createElement(s.Provider,{value:a},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),y=i(t),g=o,m=y["".concat(s,".").concat(g)]||y[g]||d[g]||r;return t?n.createElement(m,l(l({ref:a},c),{},{components:t})):n.createElement(m,l({ref:a},c))}));function m(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=g;var p={};for(var s in a)hasOwnProperty.call(a,s)&&(p[s]=a[s]);p.originalType=e,p[y]="string"==typeof e?e:o,l[1]=p;for(var i=2;i<r;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},1652:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>h,contentTitle:()=>u,default:()=>v,frontMatter:()=>m,metadata:()=>f,toc:()=>N});var n=t(15680),o=Object.defineProperty,r=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,c=(e,a,t)=>a in e?o(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))s.call(a,t)&&c(e,t,a[t]);if(p)for(var t of p(a))i.call(a,t)&&c(e,t,a[t]);return e},d=(e,a)=>r(e,l(a)),g=(e,a)=>{var t={};for(var n in e)s.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&i.call(e,n)&&(t[n]=e[n]);return t};const m={},u="load_tcp",f={unversionedId:"tql2/operators/load_tcp",id:"tql2/operators/load_tcp",title:"load_tcp",description:"Loads bytes from a TCP or TLS connection.",source:"@site/docs/tql2/operators/load_tcp.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/load_tcp",permalink:"/next/tql2/operators/load_tcp",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/tql2/operators/load_tcp.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"load_sqs",permalink:"/next/tql2/operators/load_sqs"},next:{title:"load_zmq",permalink:"/next/tql2/operators/load_zmq"}},h={},N=[{value:"Description",id:"description",level:2},{value:"<code>endpoint: str</code>",id:"endpoint-str",level:3},{value:"<code>connect = bool (optional)</code>",id:"connect--bool-optional",level:3},{value:"<code>parallel = int (optional)</code>",id:"parallel--int-optional",level:3},{value:"<code>tls = bool (optional)</code>",id:"tls--bool-optional",level:3},{value:"<code>certfile = str (optional)</code>",id:"certfile--str-optional",level:3},{value:"<code>keyfile = str (optional)</code>",id:"keyfile--str-optional",level:3},{value:"<code>{ \u2026 } (optional)</code>",id:"---optional",level:3},{value:"Examples",id:"examples",level:2},{value:"Listen for incoming Syslog over TCP",id:"listen-for-incoming-syslog-over-tcp",level:3},{value:"Connect to a remote endpoint and read JSON",id:"connect-to-a-remote-endpoint-and-read-json",level:3},{value:"Listen on localhost with TLS enabled",id:"listen-on-localhost-with-tls-enabled",level:3}],F={toc:N},b="wrapper";function v(e){var a=e,{components:t}=a,o=g(a,["components"]);return(0,n.yg)(b,d(y(y({},F),o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"load_tcp"}),"load_tcp"),(0,n.yg)("p",null,"Loads bytes from a TCP or TLS connection."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"load_tcp"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," endpoint"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, [connect"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"bool, parallel"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"int, tls"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"bool, certfile"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, keyfile"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str { \u2026 }]"))))),(0,n.yg)("h2",y({},{id:"description"}),"Description"),(0,n.yg)("p",null,"Reads bytes from the given endpoint via TCP or TLS."),(0,n.yg)("h3",y({},{id:"endpoint-str"}),(0,n.yg)("inlineCode",{parentName:"h3"},"endpoint: str")),(0,n.yg)("p",null,"The endpoint at which the server will listen. If ",(0,n.yg)("inlineCode",{parentName:"p"},"connect=true"),", this is instead\nthe remote endpoint to connect to. Must be of the form\n",(0,n.yg)("inlineCode",{parentName:"p"},"[tcp://]<hostname>:<port>"),". Use the hostname ",(0,n.yg)("inlineCode",{parentName:"p"},"0.0.0.0")," o accept connections on\nall interfaces."),(0,n.yg)("h3",y({},{id:"connect--bool-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"connect = bool (optional)")),(0,n.yg)("p",null,"Connect to the endpoint instead of listening at it."),(0,n.yg)("h3",y({},{id:"parallel--int-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"parallel = int (optional)")),(0,n.yg)("p",null,"Maximum number of parallel connections at once."),(0,n.yg)("h3",y({},{id:"tls--bool-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"tls = bool (optional)")),(0,n.yg)("p",null,"Whether to use TLS."),(0,n.yg)("h3",y({},{id:"certfile--str-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"certfile = str (optional)")),(0,n.yg)("p",null,"Path to a ",(0,n.yg)("inlineCode",{parentName:"p"},".pem")," file containing the TLS certificate."),(0,n.yg)("h3",y({},{id:"keyfile--str-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"keyfile = str (optional)")),(0,n.yg)("p",null,"Path to a ",(0,n.yg)("inlineCode",{parentName:"p"},".pem")," file containing the private key for the certificate."),(0,n.yg)("h3",y({},{id:"---optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"{ \u2026 } (optional)")),(0,n.yg)("p",null,"The pipeline to run for each individual TCP connection. If none is specified, no\ntransformations are applied to the output streams. Unless you are sure that\nthere is at most one active connection at a time, it is recommended to specify a\npipeline that parses the individual connection streams into events, for instance\n",(0,n.yg)("inlineCode",{parentName:"p"},"{ read_json }"),". Otherwise, the output can be interleaved."),(0,n.yg)("h2",y({},{id:"examples"}),"Examples"),(0,n.yg)("h3",y({},{id:"listen-for-incoming-syslog-over-tcp"}),"Listen for incoming Syslog over TCP"),(0,n.yg)("p",null,"Listen on all network interfaces, parsing each individual connection as syslog:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"load_tcp"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "0.0.0.0:8090"'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," { "),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"read_syslog"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," }"))))),(0,n.yg)("h3",y({},{id:"connect-to-a-remote-endpoint-and-read-json"}),"Connect to a remote endpoint and read JSON"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#8B949E"}}),"// We know that there is only one connection, so we do not specify a pipeline.")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"load_tcp"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "example.org:8090"'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", connect"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"true")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"read_json"))))),(0,n.yg)("h3",y({},{id:"listen-on-localhost-with-tls-enabled"}),"Listen on localhost with TLS enabled"),(0,n.yg)("p",null,"Wait for connections on localhost with TLS enabled, parsing incoming JSON\nstreams according to the schema ",(0,n.yg)("inlineCode",{parentName:"p"},'"my_schema"'),", forwarding no more than 20 events\nper individual connection:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"load_tcp"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "127.0.0.1:4000"'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", tls"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"true"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", certfile"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"key_and_cert.pem"'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", keyfile"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"key_and_cert.pem"'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," {")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"  read_json"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," schema"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"my_schema"')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"  head"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 20")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,n.yg)("p",null,"This example may use a self-signed certificate that can be generated like this:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"bash","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"bash","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FFA657"}}),"openssl"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," req"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," -x509"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," -newkey"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," rsa:2048"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," -keyout"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," key_and_cert.pem"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," -out"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," key_and_cert.pem"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," -days"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 365"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," -nodes"))))),(0,n.yg)("p",null,"You can test the endpoint locally by issuing a TLS connection:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"bash","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"bash","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FFA657"}}),"openssl"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," s_client"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," 127.0.0.1:4000"))))))}v.isMDXComponent=!0}}]);