"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[25517],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>f});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return t?n.createElement(f,i(i({ref:r},c),{},{components:t})):n.createElement(f,i({ref:r},c))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},11147:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>g,contentTitle:()=>y,default:()=>O,frontMatter:()=>f,metadata:()=>b,toc:()=>v});var n=t(15680),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,m=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&c(e,t,r[t]);if(s)for(var t of s(r))p.call(r,t)&&c(e,t,r[t]);return e},d=(e,r)=>a(e,i(r)),u=(e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&s)for(var n of s(e))r.indexOf(n)<0&&p.call(e,n)&&(t[n]=e[n]);return t};const f={sidebar_custom_props:{format:{parser:!0,printer:!0}}},y="bitz",b={unversionedId:"formats/bitz",id:"version-v4.21/formats/bitz",title:"bitz",description:"Reads and writes BITZ, Tenzir's internal wire format.",source:"@site/versioned_docs/version-v4.21/formats/bitz.md",sourceDirName:"formats",slug:"/formats/bitz",permalink:"/formats/bitz",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.21/formats/bitz.md",tags:[],version:"v4.21",frontMatter:{sidebar_custom_props:{format:{parser:!0,printer:!0}}},sidebar:"docsSidebar",previous:{title:"Formats",permalink:"/formats"},next:{title:"cef",permalink:"/formats/cef"}},g={},v=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2}],h={toc:v},w="wrapper";function O(e){var r=e,{components:t}=r,o=u(r,["components"]);return(0,n.yg)(w,d(m(m({},h),o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",m({},{id:"bitz"}),"bitz"),(0,n.yg)("p",null,"Reads and writes BITZ, Tenzir's internal wire format."),(0,n.yg)("h2",m({},{id:"synopsis"}),"Synopsis"),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{}),"bitz\n")),(0,n.yg)("h2",m({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"bitz")," format provides a parser and printer for Tenzir's internal wire\nformat. It enables lossless transfer of events between Tenzir nodes through any\nconnector."),(0,n.yg)("p",null,"Use BITZ when you need high-throughput structured data exchange with minimal\noverhead. BITZ is a thin wrapper around Arrow's record batches. That is, BITZ\nlays out data in a (compressed) columnar fashion that makes it conducive for\nanalytical workloads. Since it's padded and byte-aligned, it is portable and\ndoesn't induce any deserialization cost, making it suitable for\nwrite-once-read-many use cases."),(0,n.yg)("p",null,"Internally, BITZ uses Arrow's IPC format for serialization and deserialization,\nbut prefixes each message with a 64 bit size prefix to support changing schemas\nbetween batches\u2014something that Arrow's IPC format does not support on its own."),(0,n.yg)("admonition",m({},{title:"Did you know?",type:"info"}),(0,n.yg)("p",{parentName:"admonition"},"BITZ is short for ",(0,n.yg)("strong",{parentName:"p"},"bi"),"nary ",(0,n.yg)("strong",{parentName:"p"},"T"),"en",(0,n.yg)("strong",{parentName:"p"},"z"),"ir, and a play on the word bits.")),(0,n.yg)("h2",m({},{id:"examples"}),"Examples"),(0,n.yg)("p",null,"Transfer events between two pipelines using ",(0,n.yg)("inlineCode",{parentName:"p"},"zmq"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{className:"language-text",metastring:'{0} title="Send BITZ over ZeroMQ"',"{0}":!0,title:'"Send',BITZ:!0,over:!0,'ZeroMQ"':!0}),"export\n| to zmq://localhost:5670 write bitz\n")),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{className:"language-text",metastring:'{0} title="Receive BITZ from ZeroMQ"',"{0}":!0,title:'"Receive',BITZ:!0,from:!0,'ZeroMQ"':!0}),"from zmq://localhost:5670 read bitz\n| import\n")))}O.isMDXComponent=!0}}]);