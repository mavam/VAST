"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[42428],{15680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>m});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},y="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),y=s(a),c=r,m=y["".concat(l,".").concat(c)]||y[c]||g[c]||o;return a?n.createElement(m,p(p({ref:t},d),{},{components:a})):n.createElement(m,p({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[y]="string"==typeof e?e:r,p[1]=i;for(var s=2;s<o;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},10425:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>F,frontMatter:()=>m,metadata:()=>f,toc:()=>v});var n=a(15680),r=Object.defineProperty,o=Object.defineProperties,p=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,d=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,y=(e,t)=>{for(var a in t||(t={}))l.call(t,a)&&d(e,a,t[a]);if(i)for(var a of i(t))s.call(t,a)&&d(e,a,t[a]);return e},g=(e,t)=>o(e,p(t)),c=(e,t)=>{var a={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&s.call(e,n)&&(a[n]=e[n]);return a};const m={},u="python",f={unversionedId:"tql2/operators/python",id:"version-v4.23/tql2/operators/python",title:"python",description:"A Python 3 (>=3.10) interpreter must be present in the PATH environment",source:"@site/versioned_docs/version-v4.23/tql2/operators/python.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/python",permalink:"/v4.23/tql2/operators/python",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.23/tql2/operators/python.md",tags:[],version:"v4.23",frontMatter:{},sidebar:"docsSidebar",previous:{title:"publish",permalink:"/v4.23/tql2/operators/publish"},next:{title:"rare",permalink:"/v4.23/tql2/operators/rare"}},h={},v=[{value:"Description",id:"description",level:2},{value:"<code>code: str</code>",id:"code-str",level:3},{value:"<code>file: str</code>",id:"file-str",level:3},{value:"<code>requirements = str (optional)</code>",id:"requirements--str-optional",level:3},{value:"Examples",id:"examples",level:2},{value:"Insert or modify a field",id:"insert-or-modify-a-field",level:3},{value:"Remove all fields from an event",id:"remove-all-fields-from-an-event",level:3},{value:"Insert a new field",id:"insert-a-new-field",level:3},{value:"Make use of third party packages",id:"make-use-of-third-party-packages",level:3}],N={toc:v},b="wrapper";function F(e){var t=e,{components:a}=t,r=c(t,["components"]);return(0,n.yg)(b,g(y(y({},N),r),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"python"}),"python"),(0,n.yg)("admonition",y({},{title:"Requirements",type:"info"}),(0,n.yg)("p",{parentName:"admonition"},"A Python 3 (>=3.10) interpreter must be present in the ",(0,n.yg)("inlineCode",{parentName:"p"},"PATH")," environment\nvariable of the ",(0,n.yg)("inlineCode",{parentName:"p"},"tenzir")," or ",(0,n.yg)("inlineCode",{parentName:"p"},"tenzir-node")," process.")),(0,n.yg)("p",null,"Executes Python code against each event of the input."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"python"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," code"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, [requirements"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str]")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"python"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," file"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, [requirements"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str]"))))),(0,n.yg)("h2",y({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"python")," operator executes user-provided Python code against each event of\nthe input."),(0,n.yg)("p",null,"By default, the Tenzir node executing the pipeline creates a virtual environment\ninto which the ",(0,n.yg)("inlineCode",{parentName:"p"},"tenzir")," Python package is installed. This behavior can be turned\noff in the node configuration using the ",(0,n.yg)("inlineCode",{parentName:"p"},"plugin.python.create-venvs")," boolean\noption."),(0,n.yg)("admonition",y({},{title:"Performance",type:"note"}),(0,n.yg)("p",{parentName:"admonition"},"The ",(0,n.yg)("inlineCode",{parentName:"p"},"python")," operator implementation applies the provided Python code to each\ninput row one bw one. We use\n",(0,n.yg)("a",y({parentName:"p"},{href:"https://arrow.apache.org/docs/python/index.html"}),"PyArrow")," to convert the input\nvalues to native Python data types and back to the Tenzir data model after the\ntransformation.")),(0,n.yg)("h3",y({},{id:"code-str"}),(0,n.yg)("inlineCode",{parentName:"h3"},"code: str")),(0,n.yg)("p",null,"The provided Python code describes an event-for-event transformation, i.e., it\nis executed once for each input event and produces exactly output event."),(0,n.yg)("p",null,"An implicitly defined ",(0,n.yg)("inlineCode",{parentName:"p"},"self")," variable represents the event. Modify it to alter\nthe output of the operator. Fields of the event can be accessed with the dot\nnotation. For example, if the input event contains fields ",(0,n.yg)("inlineCode",{parentName:"p"},"a")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"b")," then the\nPython code can access and modify them using ",(0,n.yg)("inlineCode",{parentName:"p"},"self.a")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"self.b"),". Similarly,\nnew fields are added by assigning to ",(0,n.yg)("inlineCode",{parentName:"p"},"self.fieldname")," and existing fields can be\nremoved by deleting them from ",(0,n.yg)("inlineCode",{parentName:"p"},"self"),". When new fields are added, it is required\nthat the new field has the same type for every row of the event."),(0,n.yg)("h3",y({},{id:"file-str"}),(0,n.yg)("inlineCode",{parentName:"h3"},"file: str")),(0,n.yg)("p",null,"Instead of providing the code inline, the ",(0,n.yg)("inlineCode",{parentName:"p"},"file")," option allows for passing\na path to a file containing the code the operator executes per event."),(0,n.yg)("h3",y({},{id:"requirements--str-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"requirements = str (optional)")),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"requirements")," flag can be used to pass additional package dependencies in\nthe pip format. When it is used, the argument is passed on to ",(0,n.yg)("inlineCode",{parentName:"p"},"pip install")," in a\ndedicated virtual environment."),(0,n.yg)("p",null,"The string is passed verbatim to ",(0,n.yg)("inlineCode",{parentName:"p"},"pip install"),". To add multiple dependencies,\nseparate them with a space: ",(0,n.yg)("inlineCode",{parentName:"p"},'requirements="foo bar"'),"."),(0,n.yg)("h2",y({},{id:"examples"}),"Examples"),(0,n.yg)("h3",y({},{id:"insert-or-modify-a-field"}),"Insert or modify a field"),(0,n.yg)("p",null,"Set field ",(0,n.yg)("inlineCode",{parentName:"p"},"x")," to ",(0,n.yg)("inlineCode",{parentName:"p"},'"hello, world"')),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"python"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}})," \"self.x = 'hello, world'\""))))),(0,n.yg)("h3",y({},{id:"remove-all-fields-from-an-event"}),"Remove all fields from an event"),(0,n.yg)("p",null,"Clear the contents of ",(0,n.yg)("inlineCode",{parentName:"p"},"self")," to remove the implicit input values from the\noutput:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"python"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"  self.clear()")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"'))))),(0,n.yg)("h3",y({},{id:"insert-a-new-field"}),"Insert a new field"),(0,n.yg)("p",null,"Define a new field ",(0,n.yg)("inlineCode",{parentName:"p"},"x")," as the square root of the field ",(0,n.yg)("inlineCode",{parentName:"p"},"y"),", and remove ",(0,n.yg)("inlineCode",{parentName:"p"},"y")," from\nthe output:"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"python"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"  import math")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"  self.x = math.sqrt(self.y)")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"  del self.y")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"'))))),(0,n.yg)("h3",y({},{id:"make-use-of-third-party-packages"}),"Make use of third party packages"),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"python"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FFA657"}})," r"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"#"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),"  import requests")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'  requests.post("'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"http"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#8B949E"}}),'//imaginary.api/receive", data=self)')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"#, requirements="'),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"requests"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"^"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"2.30"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),'"'))))))}F.isMDXComponent=!0}}]);