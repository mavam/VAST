"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67604],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>m});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},g=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),c=d(a),y=r,m=c["".concat(p,".").concat(y)]||c[y]||s[y]||i;return a?n.createElement(m,l(l({ref:t},g),{},{components:a})):n.createElement(m,l({ref:t},g))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=y;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"},63067:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>N,contentTitle:()=>f,default:()=>v,frontMatter:()=>m,metadata:()=>u,toc:()=>b});var n=a(15680),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,g=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))p.call(t,a)&&g(e,a,t[a]);if(o)for(var a of o(t))d.call(t,a)&&g(e,a,t[a]);return e},s=(e,t)=>i(e,l(t)),y=(e,t)=>{var a={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&d.call(e,n)&&(a[n]=e[n]);return a};const m={},f="nics",u={unversionedId:"tql2/operators/nics",id:"tql2/operators/nics",title:"nics",description:"Shows a snapshot of available network interfaces.",source:"@site/docs/tql2/operators/nics.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/nics",permalink:"/next/tql2/operators/nics",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/tql2/operators/nics.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"metrics",permalink:"/next/tql2/operators/metrics"},next:{title:"openapi",permalink:"/next/tql2/operators/openapi"}},N={},b=[{value:"Description",id:"description",level:2},{value:"Schemas",id:"schemas",level:2},{value:"<code>tenzir.nic</code>",id:"tenzirnic",level:3},{value:"Examples",id:"examples",level:2},{value:"List all connected network interfaces",id:"list-all-connected-network-interfaces",level:3}],h={toc:b},w="wrapper";function v(e){var t=e,{components:a}=t,r=y(t,["components"]);return(0,n.yg)(w,s(c(c({},h),r),{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",c({},{id:"nics"}),"nics"),(0,n.yg)("p",null,"Shows a snapshot of available network interfaces."),(0,n.yg)("figure",c({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",c({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",c({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",c({parentName:"code"},{"data-line":""}),(0,n.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"nics"))))),(0,n.yg)("h2",c({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"nics")," operator shows a snapshot of all available network interfaces."),(0,n.yg)("h2",c({},{id:"schemas"}),"Schemas"),(0,n.yg)("p",null,"Tenzir emits network interface card information with the following schema."),(0,n.yg)("h3",c({},{id:"tenzirnic"}),(0,n.yg)("inlineCode",{parentName:"h3"},"tenzir.nic")),(0,n.yg)("p",null,"Contains detailed information about the network interface."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",c({parentName:"tr"},{align:"left"}),"Field"),(0,n.yg)("th",c({parentName:"tr"},{align:"left"}),"Type"),(0,n.yg)("th",c({parentName:"tr"},{align:"left"}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"name")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"string")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"The name of the network interface.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"description")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"string")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"A brief note or explanation about the network interface.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"addresses")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"list")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"A list of IP addresses assigned to the network interface.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"loopback")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is a loopback interface.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"up")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is up and can transmit data.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"running")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is running and operational.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"wireless")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is a wireless interface.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"status")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"record")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"A record containing detailed status information about the network interface.")))),(0,n.yg)("p",null,"The record ",(0,n.yg)("inlineCode",{parentName:"p"},"status")," has the following schema:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",c({parentName:"tr"},{align:"left"}),"Field"),(0,n.yg)("th",c({parentName:"tr"},{align:"left"}),"Type"),(0,n.yg)("th",c({parentName:"tr"},{align:"left"}),"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"unknown")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface status is unknown.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"connected")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is connected.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"disconnected")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is disconnected.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"not_applicable")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),(0,n.yg)("inlineCode",{parentName:"td"},"bool")),(0,n.yg)("td",c({parentName:"tr"},{align:"left"}),"Indicates if the network interface is not applicable.")))),(0,n.yg)("h2",c({},{id:"examples"}),"Examples"),(0,n.yg)("h3",c({},{id:"list-all-connected-network-interfaces"}),"List all connected network interfaces"),(0,n.yg)("figure",c({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",c({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",c({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",c({parentName:"code"},{"data-line":""}),(0,n.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"nics")),"\n",(0,n.yg)("span",c({parentName:"code"},{"data-line":""}),(0,n.yg)("span",c({parentName:"span"},{style:{color:"#D2A8FF"}}),"where"),(0,n.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}})," status"),(0,n.yg)("span",c({parentName:"span"},{style:{color:"#FF7B72"}}),"."),(0,n.yg)("span",c({parentName:"span"},{style:{color:"#E6EDF3"}}),"connected"))))))}v.isMDXComponent=!0}}]);