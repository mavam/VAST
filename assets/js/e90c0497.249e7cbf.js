"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[43782],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>u});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),f=a,u=m["".concat(p,".").concat(f)]||m[f]||d[f]||o;return t?n.createElement(u,s(s({ref:r},c),{},{components:t})):n.createElement(u,s({ref:r},c))}));function u(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=f;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},39107:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>g,contentTitle:()=>y,default:()=>O,frontMatter:()=>u,metadata:()=>v,toc:()=>h});var n=t(15680),a=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,m=(e,r)=>{for(var t in r||(r={}))p.call(r,t)&&c(e,t,r[t]);if(i)for(var t of i(r))l.call(r,t)&&c(e,t,r[t]);return e},d=(e,r)=>o(e,s(r)),f=(e,r)=>{var t={};for(var n in e)p.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&i)for(var n of i(e))r.indexOf(n)<0&&l.call(e,n)&&(t[n]=e[n]);return t};const u={sidebar_custom_props:{format:{parser:!0}}},y="leef",v={unversionedId:"formats/leef",id:"formats/leef",title:"leef",description:"Parses events in the Log Event Extended Format (LEEF).",source:"@site/docs/formats/leef.md",sourceDirName:"formats",slug:"/formats/leef",permalink:"/next/formats/leef",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/formats/leef.md",tags:[],version:"current",frontMatter:{sidebar_custom_props:{format:{parser:!0}}},sidebar:"docsSidebar",previous:{title:"kv",permalink:"/next/formats/kv"},next:{title:"lines",permalink:"/next/formats/lines"}},g={},h=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Common Options (Parser)",id:"common-options-parser",level:3},{value:"Examples",id:"examples",level:2}],b={toc:h},E="wrapper";function O(e){var r=e,{components:t}=r,a=f(r,["components"]);return(0,n.yg)(E,d(m(m({},b),a),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",m({},{id:"leef"}),"leef"),(0,n.yg)("p",null,"Parses events in the Log Event Extended Format (LEEF)."),(0,n.yg)("h2",m({},{id:"synopsis"}),"Synopsis"),(0,n.yg)("p",null,"Parser:"),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{}),"leef [--merge] [--schema <schema>] [--selector <fieldname[:prefix]>]\n     [--schema-only] [--raw] [--unnest-separator <separator>]\n")),(0,n.yg)("h2",m({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("a",m({parentName:"p"},{href:"https://www.ibm.com/docs/en/dsm?topic=overview-leef-event-components"}),"Log Event Extended Format (LEEF)")," is an event representation\npopularized by IBM QRadar. Many tools send LEEF over ",(0,n.yg)("a",m({parentName:"p"},{href:"/next/formats/syslog"}),"Syslog"),"."),(0,n.yg)("p",null,"LEEF is a line-based format and every line begins with a ",(0,n.yg)("em",{parentName:"p"},"header")," that is\nfollowed by ",(0,n.yg)("em",{parentName:"p"},"attributes")," in the form of key-value pairs."),(0,n.yg)("p",null,"LEEF v1.0 defines 5 header fields and LEEF v2.0 has an additional field to\ncustomize the key-value pair separator, which can be a single character or the\nhex value prefixed by ",(0,n.yg)("inlineCode",{parentName:"p"},"0x")," or ",(0,n.yg)("inlineCode",{parentName:"p"},"x"),":"),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{}),"LEEF:1.0|Vendor|Product|Version|EventID|\nLEEF:2.0|Vendor|Product|Version|EventID|DelimiterCharacter|\n")),(0,n.yg)("p",null,"For LEEF v1.0, the tab (",(0,n.yg)("inlineCode",{parentName:"p"},"\\t"),") character is hard-coded as attribute separator."),(0,n.yg)("p",null,"Here are some real-world LEEF events:"),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{}),"LEEF:1.0|Microsoft|MSExchange|2016|15345|src=10.50.1.1  dst=2.10.20.20  spt=1200\nLEEF:2.0|Lancope|StealthWatch|1.0|41|^|src=10.0.1.8^dst=10.0.0.5^sev=5^srcPort=81^dstPort=21\n")),(0,n.yg)("p",null,"Tenzir translates the event attributes into a nested record, where the key-value\npairs map to record fields. Here is an example of the parsed events from above:"),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{className:"language-json"}),'{\n  "leef_version": "1.0",\n  "vendor": "Microsoft",\n  "product_name": "MSExchange",\n  "product_version": "2016",\n  "attributes": {\n    "src": "10.50.1.1",\n    "dst": "2.10.20.20",\n    "spt": 1200,\n  }\n}\n{\n  "leef_version": "2.0",\n  "vendor": "Lancope",\n  "product_name": "StealthWatch",\n  "product_version": "1.0",\n  "attributes": {\n    "src": "10.0.1.8",\n    "dst": "10.0.0.5",\n    "sev": 5,\n    "srcPort": 81,\n    "dstPort": 21\n  }\n}\n')),(0,n.yg)("h3",m({},{id:"common-options-parser"}),"Common Options (Parser)"),(0,n.yg)("p",null,"The LEEF parser supports the common ",(0,n.yg)("a",m({parentName:"p"},{href:"/next/formats#parser-schema-inference"}),"schema inference options"),"."),(0,n.yg)("h2",m({},{id:"examples"}),"Examples"),(0,n.yg)("p",null,"Read LEEF over a Syslog via UDP:"),(0,n.yg)("pre",null,(0,n.yg)("code",m({parentName:"pre"},{}),"from udp://0.0.0.0:514 read syslog\n| parse content leef\n| import\n")))}O.isMDXComponent=!0}}]);