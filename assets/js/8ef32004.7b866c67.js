"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[55861],{15680:(e,a,n)=>{n.d(a,{xA:()=>y,yg:()=>d});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),i=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},y=function(e){var a=i(e.components);return t.createElement(l.Provider,{value:a},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),g=i(n),c=r,d=g["".concat(l,".").concat(c)]||g[c]||m[c]||s;return n?t.createElement(d,o(o({ref:a},y),{},{components:n})):t.createElement(d,o({ref:a},y))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=c;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p[g]="string"==typeof e?e:r,o[1]=p;for(var i=2;i<s;i++)o[i]=n[i];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},49055:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>N,contentTitle:()=>u,default:()=>D,frontMatter:()=>d,metadata:()=>E,toc:()=>h});var t=n(15680),r=Object.defineProperty,s=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,y=(e,a,n)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,g=(e,a)=>{for(var n in a||(a={}))l.call(a,n)&&y(e,n,a[n]);if(p)for(var n of p(a))i.call(a,n)&&y(e,n,a[n]);return e},m=(e,a)=>s(e,o(a)),c=(e,a)=>{var n={};for(var t in e)l.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&p)for(var t of p(e))a.indexOf(t)<0&&i.call(e,t)&&(n[t]=e[t]);return n};const d={title:"VAST v1.1",description:"VAST v1.1 - Compaction & Query Language Frontends",authors:"dominiklohmann",date:new Date("2022-03-03T00:00:00.000Z"),last_updated:new Date("2022-07-15T00:00:00.000Z"),tags:["release","compaction","query"]},u=void 0,E={permalink:"/blog/vast-v1.1",source:"@site/blog/vast-v1.1/index.md",title:"VAST v1.1",description:"VAST v1.1 - Compaction & Query Language Frontends",date:"2022-03-03T00:00:00.000Z",formattedDate:"March 3, 2022",tags:[{label:"release",permalink:"/blog/tags/release"},{label:"compaction",permalink:"/blog/tags/compaction"},{label:"query",permalink:"/blog/tags/query"}],readingTime:5.975,hasTruncateMarker:!0,authors:[{name:"Dominik Lohmann",title:"Engineering Manager",url:"https://github.com/dominiklohmann",email:"dominik@tenzir.com",imageURL:"https://github.com/dominiklohmann.png",key:"dominiklohmann"}],frontMatter:{title:"VAST v1.1",description:"VAST v1.1 - Compaction & Query Language Frontends",authors:"dominiklohmann",date:"2022-03-03T00:00:00.000Z",last_updated:"2022-07-15T00:00:00.000Z",tags:["release","compaction","query"]},prevItem:{title:"VAST v1.1.1",permalink:"/blog/vast-v1.1.1"},nextItem:{title:"VAST v1.0",permalink:"/blog/vast-v1.0"}},N={authorsImageUrls:[void 0]},h=[{value:"Query Language Plugins",id:"query-language-plugins",level:2},{value:"Compaction Plugin",id:"compaction-plugin",level:2},{value:"Updates to Transform Steps",id:"updates-to-transform-steps",level:2},{value:"Aggregate Step",id:"aggregate-step",level:3},{value:"Rename Step",id:"rename-step",level:3},{value:"Project and Select Steps",id:"project-and-select-steps",level:3},{value:"Deprecations",id:"deprecations",level:2}],f={toc:h},F="wrapper";function D(e){var a=e,{components:n}=a,r=c(a,["components"]);return(0,t.yg)(F,m(g(g({},f),r),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"Dear community, we are excited to announce ",(0,t.yg)("a",g({parentName:"p"},{href:"https://github.com/tenzir/vast/releases/tag/v1.1.0"}),"VAST v1.1"),",\nwhich ships with exciting new features: ",(0,t.yg)("em",{parentName:"p"},"query language plugins")," to exchange the\nquery expression frontend, and ",(0,t.yg)("em",{parentName:"p"},"compaction")," as a mechanism for expressing\nfine-grained data retention policies and gradually aging out data instead of\nsimply deleting it."),(0,t.yg)("h2",g({},{id:"query-language-plugins"}),"Query Language Plugins"),(0,t.yg)("p",null,"VAST features a new query language plugin type\nthat makes it possible to exchange the querying frontend, that is, replace the\nlanguage in which the user writes queries. This makes it easier to integrate\nVAST into specific domains without compromising the policy-neutral system core."),(0,t.yg)("p",null,"The first instance of the query language plugin is the ",(0,t.yg)("a",g({parentName:"p"},{href:"https://github.com/tenzir/vast/tree/master/plugins/sigma"}),(0,t.yg)("inlineCode",{parentName:"a"},"sigma"),"\nplugin"),", which make it\npossible to pass Sigma rules as\ninput instead of a standard VAST query expression. Prior to this plugin, VAST\nattempted to parse a query as Sigma rule first, and if that failed, tried to\nparse it as a VAST expression. The behavior changed in that VAST now always\ntries to interpret user input as VAST expression, and if that fails, goes\nthrough all other loaded query language plugins."),(0,t.yg)("p",null,"Moving forward, we will make it easier for integrators to BYO query language and\nleverage VAST as an execution engine. We have already\n",(0,t.yg)("a",g({parentName:"p"},{href:"https://github.com/tenzir/vast/pull/2075"}),"experimented")," with\n",(0,t.yg)("a",g({parentName:"p"},{href:"https://substrait.io"}),"Substrait"),", a cross-language protobuf spec for query\nplans. The vision is that users can easily connect ",(0,t.yg)("em",{parentName:"p"},"any")," query language that\ncompiles into Substrait, and VAST takes the query plan as binary substrait blob.\nSubstrait is still a very young project, but if the Arrow integration starts to\nmature, it has the potential to enable very powerful types of queries without\nmuch heavy lifting on our end. We already use the Arrow Compute API to implement\ngeneric grouping and aggregation during compaction, which allows us to avoid\nhand-roll and optimize compute kernels for standard functions."),(0,t.yg)("h2",g({},{id:"compaction-plugin"}),"Compaction Plugin"),(0,t.yg)("p",null,"Compaction is a feature to perform fine-grained transformation of historical\ndata to manage a fixed storage budget. This gives operators full control over\nshrinking data gradually\u2014both from a temporal and spatial angle:"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Spatial"),": Traditionally, reaching a storage budget triggers deletion of the\noldest (or least-recently-used) data. This is a binary decision to throw away a\nsubset of events. It does not differentiate the utility of data within an event.\nWhat if you could only throw away the irrelevant parts and keep the information\nthat might still be useful for longitudinal investigations? What if you could\naggregate multiple events into a single one that captures valuable information?\nImagine, for example, halving the space utilization of events with network flow\ninformation and keeping them 6 months longer; or imagine you could roll up a set\nof flows into a traffic matrix that only captures who communicated with whom in\na given timeframe."),(0,t.yg)("p",null,"By incrementally elevating data into more space-efficient representations,\ncompaction gives you a much more powerful mechanism to achieve long retention\nperiods while working with high-volume telemetry."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Temporal"),": data residency regulations often come with compliance policies\nwith maximum retention periods, e.g., data containing personal data. For\nexample, a policy may dictate a maximum retention of 1 week for events\ncontaining URIs and 3 months for events containing IP addresses related to\nnetwork connections. However, these retention windows could be broadened when\npseudonomyzing or anonymizing the relevant fields."),(0,t.yg)("p",null,"Compaction has a policy-based approach to specify these temporal constraints in\na clear, declarative fashion."),(0,t.yg)("p",null,"Compaction supersedes both the disk monitor and aging, being able to cover the\nentire functionality of their behaviors in a more configurable way. The disk\nmonitor remains unchanged and the experimental aging feature is deprecated (see\nbelow)."),(0,t.yg)("h2",g({},{id:"updates-to-transform-steps"}),"Updates to Transform Steps"),(0,t.yg)("h3",g({},{id:"aggregate-step"}),"Aggregate Step"),(0,t.yg)("admonition",g({},{title:"Transforms \u2192 Pipelines",type:"info"}),(0,t.yg)("p",{parentName:"admonition"},"In ",(0,t.yg)("a",g({parentName:"p"},{href:"/blog/vast-v2.2"}),"VAST v2.2"),", we renamed ",(0,t.yg)("em",{parentName:"p"},"transforms")," to ",(0,t.yg)("em",{parentName:"p"},"pipelines"),", and\n",(0,t.yg)("em",{parentName:"p"},"transform steps")," to ",(0,t.yg)("em",{parentName:"p"},"pipeline operators"),". This caused several configuration key\nchanges. Additionally, we renamed the ",(0,t.yg)("inlineCode",{parentName:"p"},"aggregate")," operator to\n",(0,t.yg)("inlineCode",{parentName:"p"},"summarize"),". Please keep this in mind when reading the example\nbelow and consult the documentation for the up-to-date syntax.")),(0,t.yg)("p",null,"The new ",(0,t.yg)("inlineCode",{parentName:"p"},"aggregate")," transform step plugin allows for reducing data with an\naggregation operation over a group of columns."),(0,t.yg)("p",null,'Aggregation is a two-step process of first bucketing data in groups of values,\nand then executing an aggregation function that computes a single value over the\nbucket. The functionality is in line with what standard execution engines offer\nvia "group-by" and "aggregate".'),(0,t.yg)("p",null,"Based on how the transformation is invoked in VAST, the boundary for determining\nwhat goes into a grouping can be a table slice (e.g., during import/export) or\nan entire partition (during compaction)."),(0,t.yg)("p",null,"How this works is best shown on example data. Consider the following events\nrepresenting flow data that contain a source IP address, a start and end\ntimestamp, the number of bytes per flow, a boolean flag whether there is an\nassociated alert, and a unique identifier."),(0,t.yg)("figure",g({},{"data-rehype-pretty-code-figure":""}),(0,t.yg)("pre",g({parentName:"figure"},{tabIndex:0,"data-language":"json","data-theme":"github-dark-default"}),(0,t.yg)("code",g({parentName:"pre"},{"data-language":"json","data-theme":"github-dark-default",style:{display:"grid"}}),(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"{"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"source_ip"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"10.0.0.1"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"num_bytes"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"87122"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"start"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:40"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"end"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:47"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"alerted"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"false"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"unique_id"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"1"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"}")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"{"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"source_ip"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"10.0.0.2"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"num_bytes"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"62335"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"start"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:43"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"end"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:48"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"alerted"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"false"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"unique_id"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"2"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"}")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"{"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"source_ip"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"10.0.0.1"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"num_bytes"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"640"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"start"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:46"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"end"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:47"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"alerted"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"true"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"unique_id"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"3"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"}")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"{"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"source_ip"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"10.0.0.1"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"num_bytes"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"2162"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"start"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:49"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"end"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:51"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"alerted"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"false"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"unique_id"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"4"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,t.yg)("p",null,"We can now configure a transformation that groups the events by their source IP\naddress, takes the sum of the number of bytes, the minimum of the start\ntimestamp, the maximum of the end timestamp, and the disjunction of the alerted\nflag. Since the unique identifier cannot be aggregated in a meaningful manner,\nit  is discarded."),(0,t.yg)("figure",g({},{"data-rehype-pretty-code-figure":""}),(0,t.yg)("pre",g({parentName:"figure"},{tabIndex:0,"data-language":"yaml","data-theme":"github-dark-default"}),(0,t.yg)("code",g({parentName:"pre"},{"data-language":"yaml","data-theme":"github-dark-default",style:{display:"grid"}}),(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"vast"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"  transforms"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"    example-aggregation"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"      - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"aggregate"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"          group-by"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"            - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"source_ip")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"          sum"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"            - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"num_bytes")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"          min"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"            - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"start")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"          max"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"            - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"end")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"          any"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"            - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"alerted"))))),(0,t.yg)("p",null,"After applying the transform, the resulting events will look like this:"),(0,t.yg)("figure",g({},{"data-rehype-pretty-code-figure":""}),(0,t.yg)("pre",g({parentName:"figure"},{tabIndex:0,"data-language":"json","data-theme":"github-dark-default"}),(0,t.yg)("code",g({parentName:"pre"},{"data-language":"json","data-theme":"github-dark-default",style:{display:"grid"}}),(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"{"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"source_ip"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"10.0.0.1"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"num_bytes"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"89924"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"start"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-22T10:36:40"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"end"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2022-02-02T10:36:51"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"alerted"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"true"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"}")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"{"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"source_ip"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"10.0.0.2"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"num_bytes"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"62335"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"start"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2020-11-06T10:36:43"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"end"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),'"2020-02-22T10:36:48"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),", "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),'"alerted"'),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#79C0FF"}}),"false"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"}"))))),(0,t.yg)("p",null,"Unlike the built-in transform steps, ",(0,t.yg)("inlineCode",{parentName:"p"},"aggregate")," is a separate open-source\nplugin that needs to be manually enabled in your ",(0,t.yg)("inlineCode",{parentName:"p"},"vast.yaml")," configuration to be\nusable:"),(0,t.yg)("figure",g({},{"data-rehype-pretty-code-figure":""}),(0,t.yg)("pre",g({parentName:"figure"},{tabIndex:0,"data-language":"yaml","data-theme":"github-dark-default"}),(0,t.yg)("code",g({parentName:"pre"},{"data-language":"yaml","data-theme":"github-dark-default",style:{display:"grid"}}),(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"vast"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"  plugins"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"    - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"aggregate"))))),(0,t.yg)("h3",g({},{id:"rename-step"}),"Rename Step"),(0,t.yg)("p",null,"The new ",(0,t.yg)("inlineCode",{parentName:"p"},"rename")," transform step is a built-in that allows for changing the name\nof the schema of data. This is particularly useful when a transformation changes\nthe shape of the data. E.g., an aggregated ",(0,t.yg)("inlineCode",{parentName:"p"},"suricata.flow")," should likely be\nrenamed because it is of a different layout."),(0,t.yg)("p",null,"This is how you configure the transform step:"),(0,t.yg)("figure",g({},{"data-rehype-pretty-code-figure":""}),(0,t.yg)("pre",g({parentName:"figure"},{tabIndex:0,"data-language":"yaml","data-theme":"github-dark-default"}),(0,t.yg)("code",g({parentName:"pre"},{"data-language":"yaml","data-theme":"github-dark-default",style:{display:"grid"}}),(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"rename"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"  layout-names"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),":")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),"    - "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"from"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"suricata.flow")),"\n",(0,t.yg)("span",g({parentName:"code"},{"data-line":""}),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#7EE787"}}),"      to"),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#E6EDF3"}}),": "),(0,t.yg)("span",g({parentName:"span"},{style:{color:"#A5D6FF"}}),"suricata.aggregated_flow"))))),(0,t.yg)("h3",g({},{id:"project-and-select-steps"}),"Project and Select Steps"),(0,t.yg)("p",null,"The built-in ",(0,t.yg)("inlineCode",{parentName:"p"},"project")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"select")," transform steps now drop table slices where\nno columns and rows match the configuration respectively instead of leaving the\ndata untouched."),(0,t.yg)("h2",g({},{id:"deprecations"}),"Deprecations"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"msgpack")," encoding no longer exists. As we integrate deeper with Apache\nArrow, the ",(0,t.yg)("inlineCode",{parentName:"p"},"arrow")," encoding is now the only option. Configuration options for\n",(0,t.yg)("inlineCode",{parentName:"p"},"msgpack")," will be removed in an upcoming major release. On startup, VAST now\nwarns if any of the deprecated options are in use."),(0,t.yg)("p",null,"VAST\u2019s ",(0,t.yg)("em",{parentName:"p"},"aging")," feature never made it out of the experimental stage: it only\nerased data without updating the index correctly, leading to unnecessary lookups\ndue to overly large candidate sets and miscounts in the statistics. Because\ntime-based compaction is a superset of the aging functionality (that also\nupdates the index correctly), we will remove aging in a future release. VAST now\nwarns on startup if it\u2019s configured to run aging."))}D.isMDXComponent=!0}}]);