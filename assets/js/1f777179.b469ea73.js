"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29860],{15680:(e,a,t)=>{t.d(a,{xA:()=>m,yg:()=>g});var n=t(96540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=n.createContext({}),s=function(e){var a=n.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=s(e.components);return n.createElement(i.Provider,{value:a},e.children)},y="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),y=s(t),c=r,g=y["".concat(i,".").concat(c)]||y[c]||d[c]||l;return t?n.createElement(g,o(o({ref:a},m),{},{components:t})):n.createElement(g,o({ref:a},m))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=c;var p={};for(var i in a)hasOwnProperty.call(a,i)&&(p[i]=a[i]);p.originalType=e,p[y]="string"==typeof e?e:r,o[1]=p;for(var s=2;s<l;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8421:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>f,contentTitle:()=>u,default:()=>F,frontMatter:()=>g,metadata:()=>v,toc:()=>h});var n=t(15680),r=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,m=(e,a,t)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t,y=(e,a)=>{for(var t in a||(a={}))i.call(a,t)&&m(e,t,a[t]);if(p)for(var t of p(a))s.call(a,t)&&m(e,t,a[t]);return e},d=(e,a)=>l(e,o(a)),c=(e,a)=>{var t={};for(var n in e)i.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&p)for(var n of p(e))a.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t};const g={},u="sample",v={unversionedId:"tql2/operators/sample",id:"version-v4.23/tql2/operators/sample",title:"sample",description:"Dynamically samples events from a event stream.",source:"@site/versioned_docs/version-v4.23/tql2/operators/sample.md",sourceDirName:"tql2/operators",slug:"/tql2/operators/sample",permalink:"/v4.23/tql2/operators/sample",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.23/tql2/operators/sample.md",tags:[],version:"v4.23",frontMatter:{},sidebar:"docsSidebar",previous:{title:"reverse",permalink:"/v4.23/tql2/operators/reverse"},next:{title:"save",permalink:"/v4.23/tql2/operators/save"}},f={},h=[{value:"Description",id:"description",level:2},{value:"<code>period: duration (optional)</code>",id:"period-duration-optional",level:3},{value:"<code>mode = str (optional)</code>",id:"mode--str-optional",level:3},{value:"<code>min_events = int (optional)</code>",id:"min_events--int-optional",level:3},{value:"<code>max_rate = int (optional)</code>",id:"max_rate--int-optional",level:3},{value:"<code>max_samples = int (optional)</code>",id:"max_samples--int-optional",level:3},{value:"Examples",id:"examples",level:2},{value:"Sample the input every 30s dynamically",id:"sample-the-input-every-30s-dynamically",level:3},{value:"Sample metrics every hour",id:"sample-metrics-every-hour",level:3}],N={toc:h},b="wrapper";function F(e){var a=e,{components:t}=a,r=c(a,["components"]);return(0,n.yg)(b,d(y(y({},N),r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",y({},{id:"sample"}),"sample"),(0,n.yg)("p",null,"Dynamically samples events from a event stream."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sample"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}})," [period"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),":"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"duration, mode"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"str, min_events"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"int, max_rate"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"int, max_samples"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),"int]"))))),(0,n.yg)("h2",y({},{id:"description"}),"Description"),(0,n.yg)("p",null,"Dynamically samples input data from a stream based on the frequency of\nreceiving events for streams with varying load."),(0,n.yg)("p",null,"The operator counts the number of events received in the ",(0,n.yg)("inlineCode",{parentName:"p"},"period")," and applies\nthe specified function on the count to calculate the sampling rate for the next\nperiod."),(0,n.yg)("h3",y({},{id:"period-duration-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"period: duration (optional)")),(0,n.yg)("p",null,"The duration to count events in, i.e., how often the sample rate is computed."),(0,n.yg)("p",null,"The sampling rate for the first window is ",(0,n.yg)("inlineCode",{parentName:"p"},"1:1"),"."),(0,n.yg)("p",null,"Defaults to ",(0,n.yg)("inlineCode",{parentName:"p"},"30s"),"."),(0,n.yg)("h3",y({},{id:"mode--str-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"mode = str (optional)")),(0,n.yg)("p",null,"The function used to compute the sampling rate:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},'"ln"')," (default)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},'"log2"')),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},'"log10"')),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},'"sqrt"'))),(0,n.yg)("h3",y({},{id:"min_events--int-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"min_events = int (optional)")),(0,n.yg)("p",null,"The minimum number of events that must be received during the previous sampling\nperiod for the sampling mode to be applied in the current period. If the number\nof events in a sample group falls below this threshold, a ",(0,n.yg)("inlineCode",{parentName:"p"},"1:1")," sample rate is\nused instead."),(0,n.yg)("p",null,"Defaults to ",(0,n.yg)("inlineCode",{parentName:"p"},"30"),"."),(0,n.yg)("h3",y({},{id:"max_rate--int-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"max_rate = int (optional)")),(0,n.yg)("p",null,"The sampling rate is capped to this value if the computed rate is higher than this."),(0,n.yg)("h3",y({},{id:"max_samples--int-optional"}),(0,n.yg)("inlineCode",{parentName:"h3"},"max_samples = int (optional)")),(0,n.yg)("p",null,"The maximum number of events to emit per ",(0,n.yg)("inlineCode",{parentName:"p"},"period"),"."),(0,n.yg)("h2",y({},{id:"examples"}),"Examples"),(0,n.yg)("h3",y({},{id:"sample-the-input-every-30s-dynamically"}),"Sample the input every 30s dynamically"),(0,n.yg)("p",null,"Sample a feed ",(0,n.yg)("inlineCode",{parentName:"p"},"log-stream")," every 30s dynamically, only changing rate when more\nthan 50 events (",(0,n.yg)("inlineCode",{parentName:"p"},"min_events"),") are received. Additionally, cap the max sampling\nrate to ",(0,n.yg)("inlineCode",{parentName:"p"},"1:500"),", i.e., 1 sample for every 500 events or more (",(0,n.yg)("inlineCode",{parentName:"p"},"max_rate"),")."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"subscribe"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "log-stream"')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sample"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 30s"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", min_events"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"50"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", max_rate"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"500"))))),(0,n.yg)("h3",y({},{id:"sample-metrics-every-hour"}),"Sample metrics every hour"),(0,n.yg)("p",null,"Sample some ",(0,n.yg)("inlineCode",{parentName:"p"},"metrics")," every hour, limiting the max samples per period to 5,000\nsamples (",(0,n.yg)("inlineCode",{parentName:"p"},"max_samples"),") and limiting the overall sample count to 100,000 samples\n(",(0,n.yg)("a",y({parentName:"p"},{href:"/v4.23/tql2/operators/head"}),(0,n.yg)("inlineCode",{parentName:"a"},"head")),")."),(0,n.yg)("figure",y({},{"data-rehype-pretty-code-figure":""}),(0,n.yg)("pre",y({parentName:"figure"},{tabIndex:0,"data-language":"tql","data-theme":"github-dark-default"}),(0,n.yg)("code",y({parentName:"pre"},{"data-language":"tql","data-theme":"github-dark-default",style:{display:"grid"}}),(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"subscribe"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#A5D6FF"}}),' "metrics"')),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"sample"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 1h"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#E6EDF3"}}),", max_samples"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#FF7B72"}}),"="),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}}),"5k")),"\n",(0,n.yg)("span",y({parentName:"code"},{"data-line":""}),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#D2A8FF"}}),"head"),(0,n.yg)("span",y({parentName:"span"},{style:{color:"#79C0FF"}})," 100k"))))))}F.isMDXComponent=!0}}]);