"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[80931],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>f});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=o,f=d["".concat(s,".").concat(u)]||d[u]||y[u]||a;return t?n.createElement(f,i(i({ref:r},c),{},{components:t})):n.createElement(f,i({ref:r},c))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8939:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>g,contentTitle:()=>m,default:()=>w,frontMatter:()=>f,metadata:()=>b,toc:()=>v});var n=t(15680),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,d=(e,r)=>{for(var t in r||(r={}))s.call(r,t)&&c(e,t,r[t]);if(l)for(var t of l(r))p.call(r,t)&&c(e,t,r[t]);return e},y=(e,r)=>a(e,i(r)),u=(e,r)=>{var t={};for(var n in e)s.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&l)for(var n of l(e))r.indexOf(n)<0&&p.call(e,n)&&(t[n]=e[n]);return t};const f={sidebar_custom_props:{operator:{transformation:!0}}},m="yield",b={unversionedId:"operators/yield",id:"operators/yield",title:"yield",description:"Extracts nested records with the ability to unfold lists.",source:"@site/docs/operators/yield.md",sourceDirName:"operators",slug:"/operators/yield",permalink:"/next/operators/yield",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/operators/yield.md",tags:[],version:"current",frontMatter:{sidebar_custom_props:{operator:{transformation:!0}}},sidebar:"docsSidebar",previous:{title:"yara",permalink:"/next/operators/yara"},next:{title:"Formats",permalink:"/next/formats"}},g={},v=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;extractor&gt;</code>",id:"extractor",level:3},{value:"Examples",id:"examples",level:2}],h={toc:v},O="wrapper";function w(e){var r=e,{components:t}=r,o=u(r,["components"]);return(0,n.yg)(O,y(d(d({},h),o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",d({},{id:"yield"}),"yield"),(0,n.yg)("p",null,"Extracts nested records with the ability to unfold lists."),(0,n.yg)("h2",d({},{id:"synopsis"}),"Synopsis"),(0,n.yg)("pre",null,(0,n.yg)("code",d({parentName:"pre"},{}),"yield <extractor>\n")),(0,n.yg)("h2",d({},{id:"description"}),"Description"),(0,n.yg)("p",null,"The ",(0,n.yg)("inlineCode",{parentName:"p"},"yield"),' operator can be used to "zoom into" the extracted part of the\nincoming events. It can also return a new event for each element of a list.'),(0,n.yg)("h3",d({},{id:"extractor"}),(0,n.yg)("inlineCode",{parentName:"h3"},"<extractor>")),(0,n.yg)("p",null,"The extractor must start with a field name. This can be followed by ",(0,n.yg)("inlineCode",{parentName:"p"},".")," and\nanother field name, or by ",(0,n.yg)("inlineCode",{parentName:"p"},"[]")," to extract all elements from the given list."),(0,n.yg)("h2",d({},{id:"examples"}),"Examples"),(0,n.yg)("p",null,"The schema ",(0,n.yg)("inlineCode",{parentName:"p"},"suricata.dns")," provides a list of answers for DNS queries. Assume we\nwant to extract all answers for ",(0,n.yg)("inlineCode",{parentName:"p"},"CNAME")," records."),(0,n.yg)("pre",null,(0,n.yg)("code",d({parentName:"pre"},{}),'from eve.json\n| where #schema == "suricata.dns"\n| yield dns.answers[]\n| where rrtype == "CNAME"\n')))}w.isMDXComponent=!0}}]);