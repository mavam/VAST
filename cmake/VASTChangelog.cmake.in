cmake_minimum_required(VERSION 3.19...3.24 FATAL_ERROR)

set(categories "breaking-changes" "changes" "experimental-features" "features"
               "bug-fixes")
set(titles "Breaking Changes" "Changes" "Experimental Features" "Features"
           "Bug Fixes")

set(changelog "")
set(changelog_links "")
set(changelog_directory "@CMAKE_CURRENT_SOURCE_DIR@/changelog")

string(
  APPEND
  changelog
  "<!--\n"
  "This file is generated automatically. Add individual changelog entries to "
  "the 'changelog/' subdirectory instead.\n"
  "-->\n\n"
  "# Changelog\n\n"
  "This changelog documents all notable changes to @PROJECT_NAME@ and is "
  "updated on every release.\n\n")

file(
  GLOB releases
  LIST_DIRECTORIES ON
  RELATIVE "${changelog_directory}/"
  "${changelog_directory}/*")
list(
  SORT releases
  COMPARE NATURAL
  ORDER DESCENDING)
list(REMOVE_ITEM releases "legacy.md")
if ("next" IN_LIST releases)
  list(REMOVE_ITEM releases "next")
  list(PREPEND releases "next")
endif ()

foreach (release IN LISTS releases)
  # Write the section header.
  if (release STREQUAL "next")
    string(APPEND changelog "## Next\n\n")
  else ()
    string(APPEND changelog "## [${release}][${release}]\n\n")
    string(
      APPEND changelog_links
      "[${release}]: https://github.com/tenzir/vast/releases/tag/${release}\n")
  endif ()

  # Iterate over changelog entries for every release in a fixed order of
  # sections as defined in `categories` and `titles`.
  list(LENGTH categories num_categories)
  math(EXPR num_categories "${num_categories} - 1")
  foreach (category_index RANGE "${num_categories}")
    list(GET categories "${category_index}" category)
    list(GET titles "${category_index}" title)
    if (IS_DIRECTORY "${changelog_directory}/${release}/${category}")
      file(
        GLOB entries
        RELATIVE "${changelog_directory}/${release}/${category}/"
        "${changelog_directory}/${release}/${category}/*.md")
      if (entries)
        string(APPEND changelog "### ${title}\n\n")
        list(SORT entries)
        # Iterate over the individual changelog entries for the current release
        # and category. Note that each paragraph is convereted into a single
        # bullet.
        foreach (entry IN LISTS entries)
          file(READ "${changelog_directory}/${release}/${category}/${entry}"
               entry_texts)
          string(REGEX REPLACE "--.*$" "" entry "${entry}")
          string(STRIP "${entry_texts}" entry_texts)
          string(REPLACE ";" ":semicolon:" entry_texts "${entry_texts}")
          string(REPLACE "\n\n" ";" entry_texts "${entry_texts}")
          foreach (entry_text IN LISTS entry_texts)
            string(REPLACE ":semicolon:" ";" entry_text "${entry_text}")
            string(REPLACE "\n" " " entry_text "${entry_text}")
            string(APPEND changelog "- ${entry_text}\n")
            string(REGEX REPLACE "\\.[^.]*$" "" references "${entry}")
            string(REPLACE "-" ";" references "${references}")
            # Add the PR/Author reference(s) to evrry changelog entry as
            # determined from the filename.
            foreach (reference IN LISTS references)
              if (reference)
                if (reference MATCHES "^[1-9][0-9]+\$")
                  set(reference_link
                      "https://github.com/tenzir/vast/pull/${reference}")
                  string(PREPEND reference "#")
                else ()
                  set(reference_link "https://github.com/${reference}")
                  string(PREPEND reference "@")
                endif ()
                string(APPEND changelog "  [${reference}](${reference_link})\n")
              endif ()
            endforeach ()
            string(APPEND changelog "\n")
          endforeach ()
        endforeach ()
      endif ()
    endif ()
  endforeach ()
endforeach ()

# Assemble the amalgamated CHANGELOG.md file.
file(READ "${changelog_directory}/legacy.md" changelog_legacy)
file(WRITE "@CMAKE_CURRENT_BINARY_DIR@/CHANGELOG.md"
     "${changelog}" "${changelog_legacy}\n" "${changelog_links}")
