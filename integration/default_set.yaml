config-file: vast.conf

fixtures:
  BiTopologyTester:
    enter: | # python
      node0 = Server(self.cmd,
                     [f'--config-file={self.config_file}',
                      '-e', f':{VAST_PORT}', '-i', 'node0', 'start'],
                     work_dir, name='node0', port=VAST_PORT)
      node1 = Server(self.cmd,
                     [f'--config-file={self.config_file}',
                      '-e', ':42124',
                      '-i', 'node1', 'start'],
                     work_dir, name='node1', port=42124)
      cmd += ['-e', f':{VAST_PORT}']

    exit: | # python
      node0.stop()
      node1.stop()

  ServerTester:
    enter: | # python
      node = Server(self.cmd,
                    [f'--config-file={self.config_file}',
                     '-e', f':{VAST_PORT}', '-i', 'node', 'start'],
                    work_dir, name='node', port=VAST_PORT)
      cmd += ['-e', f':{VAST_PORT}']


    exit: | # python
      node.stop()


tests:
  Conn log counting:
    tags: [node, counting, zeek]
    steps:
      - command: -N import -b zeek
        input: data/zeek/conn.log.gz
      - command: -N count ":addr == 192.168.1.104"
      - command: -N count -s ":addr == 192.168.1.104"
  Node Zeek conn log:
    tags: [node, import-export, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/conn.log.gz
      - command: -N export ascii 'resp_h == 192.168.1.104'
      - command: -N export ascii 'orig_bytes > 1k && orig_bytes < 1Ki'
      - command: -N export ascii ':string == "OrfTtuI5G4e" || :port == 67/udp'
      - command: -N export ascii '#type == "zeek.conn" && resp_h == 192.168.1.104'
      - command: -N export ascii '#type != "zeek.conn" && \#type != "vast.account"'
      - command: -N export ascii '#type != "foobar" && resp_h == 192.168.1.104'
  Node Zeek multiple imports:
    tags: [node, import-export, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/conn.log.gz
      - command: -N import zeek
        input: data/zeek/dns.log.gz
      - command: -N export ascii 'resp_h == 192.168.1.104'
      - command: -N export ascii 'zeek.conn.id.resp_h == 192.168.1.104'
  Node Zeek dns log:
    tags: [node, import-export, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/dns.log.gz
      - command: -N export ascii 'resp_h == 192.168.1.104'
  Node Zeek http log:
    tags: [node, import-export, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/http.log.gz
      - command: -N export ascii 'resp_h == 216.240.189.196'
  Node Zeek snmp log:
    tags: [node, import-export, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/snmp.log.gz
      - command: -N export ascii 'duration >= 3s'
  # Ground truth established via
  #     zcat < input | bgpdump -m -  \
  #       | awk -F '|' '$6 ~ /^103\.11\./ { print $6 }'
  # ...plus some piping to sort and uniq.
  Node Basic mrt:
    tags: [node, import-export, mrt, disabled]
    steps:
      - command: -N import mrt
        input: data/mrt/updates.20180530.0000.gz
      # This prefix occurs 93 times.
      - command: -N export ascii 'prefix == 120.50.4.0/23'
      # There are 53 entries for 103.11.0.0/24. All of them should include the
      # IP address 103.11.0.42.
      - command: -N export ascii '103.11.0.42 in prefix'
      # Historical component for query in issue #201. No results.
      - command: -N export ascii '114.215.46.175 in prefix'
      - command: -N export ascii 'mrt.bgp4mp.update.announcement.prefix == 120.50.4.0/23'
  Export json:
    tags: [json, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/conn.log.gz
      - command: -N export json 'resp_h == 192.168.1.104'

  Server Zeek conn log:
    tags: [server, import-export, zeek]
    fixture: ServerTester
    steps:
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: export ascii 'resp_h == 192.168.1.104'
      # import some more to make sure accounting data is in the system.
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: status
        transformation: jq '.node.index.statistics.layouts | del(."vast.account".count)'
  Server Basic bgpdump:
    tags: [server, import-export, bgpdump]
    fixture: ServerTester
    steps:
      - command: import -b bgpdump
        input: data/bgpdump/updates.20180530.bgpdump.gz
      - command: export ascii '114.215.46.175 in prefix'
      - command: export ascii '103.111.8.42 in prefix'
  Query Operators:
    tags: [server, operator]
    fixture: ServerTester
    steps:
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: export ascii 'conn.duration <= 1.0s'
      - command: export ascii 'duration >= 10.0s'
      - command: export ascii 'duration < 2.0s'
      - command: export ascii 'service  == "smtp"'
      - command: export ascii 'missed_bytes  != 0'
      - command: export ascii 'id.orig_h !in 192.168.1.0/24'
      - command: export ascii 'id.orig_h in fe80:5074:1b53:7e7::/64'
      - command: export ascii 'id.orig_h ni fe80:5074:1b53:7e7::/64'
  Expressions:
    tags: [server, expression]
    fixture: ServerTester
    steps:
      - command: import -b zeek
        input: data/zeek/conn.log.gz
      - command: export ascii 'fe80::5074:1b53:7e7:ad4d || 169.254.225.22'
      - command: export ascii '"OrfTtuI5G4e" || fe80::5074:1b53:7e7:ad4d'
  Node Type Query:
    tags: [node, type, ch6104]
    steps:
      - command: -N import -n 20 zeek
        input: data/zeek/conn.log.gz
      - command: -N export ascii '#type == "zeek.conn"'
  Type Query:
    tags: [server, type, ch5404]
    fixture: ServerTester
    steps:
      - command: import -b -n 20 zeek
        input: data/zeek/conn.log.gz
      - command: export ascii '#type == "zeek.conn"'
  Node json zeek conn:
    tags: [node, import-export, zeek, json]
    steps:
      - command: -N import json -s @./misc/schema/zeek-conn.schema -t zeek.conn
        input: data/json/conn.log.json.gz
      - command: -N export ascii 'duration > 6s'
      - command: -N export ascii '#timestamp >= 2011-08-15T03:48'
  Node suricata alert:
    tags: [node, import-export, suricata, eve]
    steps:
      - command: -N import suricata -r @./data/suricata/eve.json
      - command: -N export ascii 'src_ip == 147.32.84.165'
      - command: -N export csv '#type ~ /suricata.*/'

  Node argus csv:
    tags: [node, import-export, argus, csv]
    steps:
      - command: -N import csv -t argus.record
        input: data/csv/argus-M57-10k-pkts.csv.gz
      - command: -N export ascii 'State != "CON" && Dur > 4900ms'
      - command: -N export ascii 'Cause == "Status" && Dur > 1s'

  Manual 1:
    condition: 'import -h 2>&1 | grep -q pcap'
    tags: [examples]
    fixture: ServerTester
    steps:
      - command: import -b pcap
        input: data/pcap/example.pcap.gz
      - command: export ascii ':addr in 192.168.168.0/24'
      - command: export pcap 'sport > 60000/tcp && src !in 192.168.168.0/8'

  Manual 1 node:
    condition: 'import -h 2>&1 | grep -q pcap'
    tags: [examples]
    steps:
      - command: -N import pcap
        input: data/pcap/example.pcap.gz
      - command: -N export ascii ':addr in 192.168.168.0/24'
      - command: -N export pcap 'sport > 60000/tcp && src !in 192.168.168.0/8'

  Manual 2:
    tags: [examples, disabled]
    fixture: BiTopologyTester
    steps:
      - command: peer 'localhost:42124'
      - command: status

  Multi addr query:
    tags: [import-export, zeek]
    steps:
      - command: -N import zeek
        input: data/zeek/conn.log.gz
      - command: -N export ascii
        input: queries/multi_addr.txt
